<project name="smscadm" default="distr">

  <property file="build.properties"/>
  <property name="smsc.source.dir" value="."/>
  <property name="smsc.source.classes" value="${smsc.build.dir}/classes"/>
  <property name="smsc.source.classes.preweaved" value="${smsc.build.dir}/classes_preweaved"/>

  <property name="smsc.test.classes" value="${smsc.build.dir}/test_classes"/>
  <property name="smsc.test.classes.preweaved" value="${smsc.build.dir}/test_classes_preweaved"/>

  <property name="sources.prefix" value="${smsc.source.dir}/java/ru/novosoft/smsc"/>
  <property name="smsc.exploded.dir" value="${smsc.build.dir}/exploded"/>

  <taskdef name="protogen" classname="mobi.eyeline.protogen.ant.Protogen" classpath="libdev/protogen.jar"/>
  <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpath="lib/aspectjtools.jar"/>

  <path id="lib">
    <fileset dir="lib" includes="*.jar"/>
  </path>
  <path id="libdev">
    <fileset dir="libdev" includes="*.jar"/>
  </path>

  <taskdef resource='emma_ant.properties' classpathref="libdev" />

  <target name="gen_cc_protocol">
    <protogen language="java" msgPackage="ru.novosoft.smsc.admin.cluster_controller.protocol"
              defFile="${sources.prefix}/admin/cluster_controller/ControllerWebappProtocol.def"
              outDir="${smsc.source.dir}/java"
              tempDir="${smsc.build.dir}/tmp">
      <cgp name="search.path" value="${sources.prefix}/admin/cluster_controller/"/>
    </protogen>
  </target>

  <target name="mode">
    <echo file="${sources.prefix}/web/Mode.java">
package ru.novosoft.smsc.web;${line.separator}${line.separator}
public class Mode {${line.separator}
  public final static boolean testMode = ${smsc.devMode};${line.separator}
}
    </echo>
    <echo file="${sources.prefix}/admin/AdminMode.java">
package ru.novosoft.smsc.admin;${line.separator}${line.separator}
public class AdminMode {${line.separator}
  public final static boolean smsx = ${smsc.smsx};${line.separator}
}
    </echo>
  </target>

  <target name="copy_dtds">
    <copy todir=".">
      <fileset dir="${smsc.source.dir}/../../config" includes="*.dtd"/>
    </copy>
  </target>
   
  <target name="prebuild" depends="gen_cc_protocol, mode, copy_dtds"/>

  <target name="compile.sources">
    <delete dir="${smsc.source.classes.preweaved}" failonerror="false"/>
    <mkdir dir="${smsc.source.classes.preweaved}"/>
    <javac srcdir="${smsc.source.dir}/java" destdir="${smsc.source.classes.preweaved}" debug="true">
      <classpath refid="lib"/>
      <classpath refid="libdev"/>
    </javac>
  </target>

  <target name="weave.sources" depends="compile.sources">
    <delete dir="${smsc.source.classes}" failonerror="false"/>
    <mkdir dir="${smsc.source.classes}"/>
    <iajc destdir="${smsc.source.classes}" >
      <classpath refid="lib"/>
      <classpath refid="libdev"/>
      <inpath location="${smsc.source.classes.preweaved}"/>
    </iajc>
    <native2ascii src="${smsc.source.dir}/java" dest="${smsc.source.classes}" ext=".properties" includes="**/*.properties"/>
  </target>

  <target name="compile.tests" depends="compile.sources">
    <delete dir="${smsc.test.classes.preweaved}" failonerror="false"/>
    <mkdir dir="${smsc.test.classes.preweaved}"/>
    <copy todir="${smsc.test.classes.preweaved}">
      <fileset dir="${smsc.source.classes.preweaved}"/>
    </copy>
    <javac srcdir="${smsc.source.dir}/test" destdir="${smsc.test.classes.preweaved}" debug="true">
      <classpath refid="lib"/>
      <classpath refid="libdev"/>
    </javac>
  </target>

  <target name="weave.tests" depends="compile.tests">
    <delete dir="${smsc.test.classes}" failonerror="false"/>
    <mkdir dir="${smsc.test.classes}"/>
    <iajc destdir="${smsc.test.classes}" source="1.6">
      <classpath refid="lib"/>
      <classpath refid="libdev"/>
      <inpath location="${smsc.test.classes.preweaved}"/>
    </iajc>
    <copy todir="${smsc.test.classes}">
      <fileset dir="test" excludes="**/*.java"/>
    </copy>
    <native2ascii src="${smsc.source.dir}/java" dest="${smsc.test.classes}" ext=".properties" includes="**/*.properties"/>
  </target>

  <target name="test" depends="compile.tests, weave.tests">
    <delete dir="${smsc.tests.dir}" failonerror="false"/>
    <mkdir dir="${smsc.tests.dir}"/>

    <emma>
      <instr instrpath="${smsc.test.classes}" mode="overwrite" merge="true" metadatafile="${smsc.tests.dir}/metadata.emma">
        <filter file="emmafilter.txt" />
      </instr>
    </emma>

    <junit showoutput="true" printsummary="yes" fork="true" forkmode="once">
      <classpath path="${smsc.test.classes}"/>
      <classpath refid="lib"/>
      <classpath refid="libdev"/>

      <jvmarg value="-Demma.coverage.out.file=${smsc.tests.dir}/coverage.emma" />
      <jvmarg value="-Demma.coverage.out.merge=false" />
      <jvmarg value="-Dfile.encoding=utf-8" />

      <formatter type="xml" usefile="true"/>
      <batchtest todir="${smsc.tests.dir}">
        <fileset dir="${smsc.test.classes}" includes="**/*Test.class"/>
      </batchtest>
    </junit>

    <emma>
      <report sourcepath="${smsc.source.dir}/java">
        <infileset dir="${smsc.tests.dir}" includes="*.emma" />

        <xml outfile="${smsc.tests.dir}/coverage.xml" depth="method" />
        <html outfile="${smsc.tests.dir}/coverage.html" depth="method" encoding="utf-8"/>

      </report>
    </emma>

  </target>

  <target name="exploded">
    <delete dir="${smsc.exploded.dir}" failonerror="false"/>
    <mkdir dir="${smsc.exploded.dir}"/>
    <copy todir="${smsc.exploded.dir}">
      <fileset dir="${smsc.source.dir}/web" includes="**/*"/>
    </copy>

    <mkdir dir="${smsc.exploded.dir}/WEB-INF/lib"/>
    <copy todir="${smsc.exploded.dir}/WEB-INF/lib" >
      <fileset dir="${smsc.source.dir}/lib" excludes="javaee*.jar"/>
    </copy>
    <mkdir dir="${smsc.exploded.dir}/WEB-INF/classes/dtds"/>
    <copy todir="${smsc.exploded.dir}/WEB-INF/classes/dtds">
      <fileset dir="." includes="*.dtd"/>
    </copy>
  </target>

  <condition property="is.dev">
    <equals arg1="${smsc.devMode}" arg2="true"/>
  </condition>

  <target name="predistr.dev" if="is.dev">
    <echo>DEVELOPERS MODE</echo>
    <jar destfile="${smsc.exploded.dir}/WEB-INF/lib/smsc.jar" basedir="${smsc.test.classes}"/>
  </target>

  <target name="monitor.exploded">
    <jar destfile="${smsc.exploded.dir}/smsc/stat/monitor.jar">
      <fileset dir="${smsc.source.classes}" includes="ru/novosoft/smsc/web/applets/perfmon/**/*,ru/novosoft/smsc/web/applets/topmon/**/*,ru/novosoft/smsc/util/applet/**/*,ru/novosoft/smsc/admin/perfmon/**/*,ru/novosoft/smsc/admin/topmon/**/*"/>
      <fileset dir="${smsc.source.classes}" includes="ru/novosoft/smsc/web/resources/**/*"/>
    </jar>
  </target>


  <target name="predistr.prod" unless="is.dev">
    <echo>PRODUCTION</echo>         
    <jar destfile="${smsc.exploded.dir}/WEB-INF/lib/smsc.jar" basedir="${smsc.source.classes}"/>
  </target>

  <target name="distr" depends="weave.sources, exploded, predistr.dev,predistr.prod,monitor.exploded">
    <delete dir="${smsc.distr.dir}" failonerror="false"/>
    <mkdir dir="${smsc.distr.dir}"/>
    <war destfile="${smsc.distr.dir}/smsc.war" basedir="${smsc.exploded.dir}" webxml="${smsc.exploded.dir}/WEB-INF/web.xml">
      <manifest>
        <attribute name="Implementation-Version" value="${smsc.implementation.version}"/>
      </manifest>
    </war>
  </target>


</project>