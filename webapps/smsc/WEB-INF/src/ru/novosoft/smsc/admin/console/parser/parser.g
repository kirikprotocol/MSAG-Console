header {
package ru.novosoft.smsc.admin.console.parser;

/*
 * Parser code generated by ANTLR
 */

import ru.novosoft.smsc.admin.console.Command;
import ru.novosoft.smsc.admin.console.CommandContext;

import ru.novosoft.smsc.admin.console.commands.*;

}


/*
{
import java.io.*;

class Main {
	public static void main(String[] args) {
		try {
			CommandLexer lexer = new CommandLexer(new DataInputStream(System.in));
			CommandParser parser = new CommandParser(lexer);
			CommandContext ctx = new CommandContext(null);
			parser.parse(ctx);
		} catch(Exception e) {
			System.err.println("exception: "+e);
			e.printStackTrace(System.err);   // so we can get stack trace
		}
	}
}
}
*/


class CommandParser extends Parser;
options {
	importVocab=CommandLexer; // use vocab generated by lexer
	defaultErrorHandler=false;
}

/* ----------------------- Top level parser ----------------------- */
parse returns [Command cmd] {
    cmd = null;
}
	:	ACT_ADD 	cmd = add 
	| 	ACT_DELETE 	cmd = del
	| 	ACT_ALTER 	cmd = alt
	| 	ACT_LIST 	cmd = lst 
	| 	ACT_VIEW 	cmd = view
	|	ACT_APPLY     { cmd = new ApplyCommand(); }
	;
	
/* ----------------------- Add action parser ---------------------- */
add returns [Command cmd] {
    cmd = null;
}
	:	TGT_ROUTE 	cmd = addroute
	|	TGT_ALIAS 	cmd = addalias
	|	TGT_SUBJECT	cmd = addsubject
	|	TGT_PROFILE	cmd = addprofile
	;
	
/* ----------------------- Del action parser ---------------------- */
del returns [Command cmd] {
    cmd = null;
}
	:	TGT_ROUTE 	cmd = delroute
	|	TGT_ALIAS 	cmd = delalias
	|	TGT_SUBJECT	cmd = delsubject
	;
/* ----------------------- Alt action parser ---------------------- */
alt returns [Command cmd] {
    cmd = null;
}
	:	TGT_ROUTE   	cmd = altroute
	|	TGT_ALIAS   	cmd = altalias
	|	TGT_SUBJECT 	cmd = altsubject
	|	TGT_PROFILE 	cmd = altprofile
	;
/* ----------------------- Lst action parser ---------------------- */
lst returns [Command cmd] {
    cmd = null;
}
	:	TGT_ROUTE 	{ cmd = new RouteListCommand();   }
	|	TGT_ALIAS 	{ cmd = new AliasListCommand();   }
	|	TGT_SUBJECT	{ cmd = new SubjectListCommand(); }
	;
/* ----------------------- View action parser --------------------- */
view returns [Command cmd] {
    cmd = null;
}
	:	TGT_ROUTE	cmd = viewroute
	|	TGT_ALIAS 	cmd = viewalias
	|	TGT_SUBJECT	cmd = viewsubject
	|	TGT_PROFILE	cmd = viewprofile
	;
	
/* ----------------------- Common routes parsers ----------------------- */
srcdef[RouteGenCommand cmd] { // Special command required !!!
    RouteSrcDef def = new RouteSrcDef();
}
	:	( (OPT_SUBJ (qname:STRING | name:ID) { 
		    String out = (qname == null) ? name.getText():qname.getText();
		    def.setType(RouteSrcDef.TYPE_SUBJECT);
		    def.setSrc(out);
		  }) 
		| (OPT_MASK (addr:ADDRESS | anum:NUMBER) {
		    String val = (addr == null) ? anum.getText():addr.getText(); 
		    def.setType(RouteSrcDef.TYPE_MASK); 
		    def.setSrc(val);
		  })
		)
		{
		    cmd.addSrcDef(def);
		}
	;
dstdef[RouteGenCommand cmd] { // Special command required !!!
    RouteDstDef def = new RouteDstDef();
}
	:	( (OPT_SUBJ (qname:STRING | name:ID) { 
		    String out = (qname == null) ? name.getText():qname.getText();
		    def.setType(RouteDstDef.TYPE_SUBJECT);
		    def.setDst(out);
		  }) 
		| (OPT_MASK (addr:ADDRESS | anum:NUMBER) { 
		    String val = (addr == null) ? anum.getText():addr.getText(); 
		    def.setType(RouteDstDef.TYPE_MASK); 
		    def.setDst(val);
		  })
		)
		(qsys:STRING | isys:ID)
		{
		    String sysid = (qsys == null) ? qsys.getText():isys.getText();
		    def.setSmeId(sysid);
		    cmd.addDstDef(def);
		}
	;

/* ----------------------- Route command parsers ----------------------- */

route_src[RouteGenCommand cmd]
	:	OPT_SRC (srcdef[cmd])+
	;
route_dst[RouteGenCommand cmd]
	:	OPT_DST (dstdef[cmd])+
	;

addroute returns [RouteAddCommand cmd] {
    cmd = new RouteAddCommand();
}
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setRoute(out);
		}
		addroute_flags[cmd]
		(OPT_SVCID num:NUMBER {
		    cmd.setServiceId(Integer.parseInt(num.getText()));
		})
		(OPT_PRI pri:NUMBER {
		    cmd.setPriority(Integer.parseInt(pri.getText()));
		})
		route_src[cmd]
		route_dst[cmd]
	;
addroute_flags[RouteAddCommand cmd]
	:	( OPT_BILL   { cmd.setBill(true);   }
		| OPT_NOBILL { cmd.setBill(false);  })
		( OPT_ARCH   { cmd.setArc(true);    }
		| OPT_NOARCH { cmd.setArc(false);   })
	        ( OPT_ALLOW  { cmd.setAllow(true);  }
		| OPT_DENY   { cmd.setAllow(false); })
	;

delroute returns [RouteDeleteCommand cmd] {
    cmd = new RouteDeleteCommand();
}
	:	(qname:STRING | name:ID) 
		{
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setRoute(out);
		}
	;

altroute returns [RouteAlterCommand cmd] {
    cmd = new RouteAlterCommand();
}
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setRoute(out);
		}
		altroute_flags[cmd]
		(OPT_SVCID num:NUMBER {
		    cmd.setServiceId(Integer.parseInt(num.getText()));
		}) ?
		(OPT_PRI pri:NUMBER {
		    cmd.setPriority(Integer.parseInt(pri.getText()));
		}) ?
		( ACT_ADD    { cmd.setAction(RouteAlterCommand.ACTION_ADD); }
		| ACT_DELETE { cmd.setAction(RouteAlterCommand.ACTION_DEL); })
		( route_src[cmd] { cmd.setTarget(RouteAlterCommand.TARGET_SRC); }
		| route_dst[cmd] { cmd.setTarget(RouteAlterCommand.TARGET_DST); })
	;
altroute_flags[RouteAlterCommand cmd]
	:	( OPT_BILL   { cmd.setBill(true);   } 
		| OPT_NOBILL { cmd.setBill(false);  })?
		( OPT_ARCH   { cmd.setArc(true);    } 
		| OPT_NOARCH { cmd.setArc(false);   })?
	        ( OPT_ALLOW  { cmd.setAllow(true);  }
		| OPT_DENY   { cmd.setAllow(false); })?
	;

viewroute returns [RouteViewCommand cmd] {
    cmd = new RouteViewCommand();
}
	:	(qname:STRING | name:ID) 
		{
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setRoute(out);
		}
	;

/* ----------------------- Alias command parsers ----------------------- */

addalias returns [AliasAddCommand cmd] {
    cmd = new AliasAddCommand();
}
	:	(maddr:ADDRESS | manum:NUMBER) {
		    String mal = (maddr == null) ? manum.getText():maddr.getText();
		    cmd.setAlias(mal);
		}
		(aaddr:ADDRESS | aanum:NUMBER) {
		    String aal = (aaddr == null) ? aanum.getText():aaddr.getText();
		    cmd.setAddress(aal);
		}
		( OPT_HIDE   { cmd.setHide(true);  }
		| OPT_NOHIDE { cmd.setHide(false); })?
	;
delalias returns [AliasDeleteCommand cmd] {
    cmd = new AliasDeleteCommand();
}
	:	(aaddr:ADDRESS | aanum:NUMBER) {
		    String aal = (aaddr == null) ? aanum.getText():aaddr.getText();
		    cmd.setAlias(aal);
		}
	;
altalias returns [AliasAlterCommand cmd] {
    cmd = new AliasAlterCommand();
}
	:	(maddr:ADDRESS | manum:NUMBER) {
		    String mal = (maddr == null) ? manum.getText():maddr.getText();
		    cmd.setAlias(mal);
		}
		(aaddr:ADDRESS | aanum:NUMBER) {
		    String aal = (aaddr == null) ? aanum.getText():aaddr.getText();
		    cmd.setAddress(aal);
		}
		( OPT_HIDE   { cmd.setHide(true);  }
		| OPT_NOHIDE { cmd.setHide(false); })?
	;
viewalias returns [AliasViewCommand cmd] {
    cmd = new AliasViewCommand();
}
	:	(aaddr:ADDRESS | aanum:NUMBER) {
		    String aal = (aaddr == null) ? aanum.getText():aaddr.getText();
		    cmd.setAlias(aal);
		}
	;

/* ----------------------- Subject command parsers --------------------- */

addsubj_mask[SubjectGenCommand cmd]
	:	(maddr:ADDRESS | manum:NUMBER) {
		    String mal = (maddr == null) ? manum.getText():maddr.getText();	
		    cmd.addMask(mal);
		}
	;
addsubj_masks[SubjectGenCommand cmd]
	:	(addsubj_mask[cmd] (COMMA addsubj_mask[cmd])*)
	;

addsubject returns [SubjectAddCommand cmd] {
    cmd = new SubjectAddCommand();
}
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setSubject(out);
		}
		(qsys:STRING | isys:ID)	 {
		    String smeid = (qsys == null) ? qsys.getText():isys.getText();
		    cmd.setDefaultSmeId(smeid);
		}
		addsubj_masks[cmd]
	;
altsubject returns [SubjectAlterCommand cmd] {
    cmd = new SubjectAlterCommand();
}
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setSubject(out);
		}
		((ACT_ADD {
		    cmd.setActionAdd();
		} | ACT_DELETE {
		    cmd.setActionDelete();
		}) addsubj_masks[cmd]) | 
		(OPT_DEFSME (qsys:STRING | isys:ID) {
		    String smeid = (qsys == null) ? qsys.getText():isys.getText();
		    cmd.setDefaultSmeId(smeid);
		})
	;
delsubject returns [SubjectDeleteCommand cmd] {
    cmd = new SubjectDeleteCommand();
}
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setSubject(out);
		}
	;
viewsubject returns [SubjectViewCommand cmd] {
    cmd = new SubjectViewCommand();
}
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    cmd.setSubject(out);
		}
	;

/* ----------------------- Profile command parsers --------------------- */

addprofile returns [ProfileAddCommand cmd] {
    cmd = new ProfileAddCommand();
}
	:	(maddr:ADDRESS | manum:NUMBER) {
		    String mal = (maddr == null) ? manum.getText():maddr.getText();
		    cmd.setMask(mal);
		}
		(OPT_REPORT (VAL_FULL { cmd.setFullReport(); }
			   | VAL_NONE { cmd.setNoneReport(); } ))
		(OPT_ENCODE (VAL_GSM7 { cmd.setGsm7Encoding(); }
			   | VAL_UCS2 { cmd.setUcs2Encoding(); } ))?
	;
altprofile returns [ProfileAlterCommand cmd] {
    cmd = new ProfileAlterCommand();
}
	:	(aaddr:ADDRESS | aanum:NUMBER) {
		    String aal = (aaddr == null) ? aanum.getText():aaddr.getText();
		    cmd.setAddress(aal);
		}
		(OPT_REPORT (VAL_FULL { cmd.setFullReport(); }
			   | VAL_NONE { cmd.setNoneReport(); } ))
		(OPT_ENCODE (VAL_GSM7 { cmd.setGsm7Encoding(); }
			   | VAL_UCS2 { cmd.setUcs2Encoding(); } ))?
	;
delprofile returns [ProfileDeleteCommand cmd] {
    cmd = new ProfileDeleteCommand();
}
	:	(maddr:ADDRESS | manum:NUMBER) {
		    String mal = (maddr == null) ? manum.getText():maddr.getText();
		    cmd.setMask(mal);
		}
	;
viewprofile returns [ProfileViewCommand cmd] {
    cmd = new ProfileViewCommand();
}
	:	(aaddr:ADDRESS | aanum:NUMBER) {
		    String aal = (aaddr == null) ? aanum.getText():aaddr.getText();
		    cmd.setAddress(aal);
		}
	;
