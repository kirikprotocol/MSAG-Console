header {
package ru.novosoft.smsc.admin.console.parser;

/*
 * Parser code generated by ANTLR
 */

import ru.novosoft.smsc.admin.console.Command;
import ru.novosoft.smsc.admin.console.CommandContext;

import ru.novosoft.smsc.admin.console.commands.*;

}


{
import java.io.*;

class Main {
	public static void main(String[] args) {
		try {
			CommandLexer lexer = new CommandLexer(new DataInputStream(System.in));
			CommandParser parser = new CommandParser(lexer);
			CommandContext ctx = new CommandContext(null);
			parser.parse(ctx);
		} catch(Exception e) {
			System.err.println("exception: "+e);
			e.printStackTrace(System.err);   // so we can get stack trace
		}
	}
}
}


class CommandParser extends Parser;
options {
	importVocab=CommandLexer; // use vocab generated by lexer
}

/* ----------------------- Top level parser ----------------------- */
parse[CommandContext ctx]
	:	ACT_ADD add[ctx] 
	| 	ACT_DELETE del[ctx]
	| 	ACT_ALTER alt[ctx]
	| 	ACT_LIST lst[ctx] 
	| 	ACT_VIEW view[ctx]
	|	ACT_APPLY {
		    System.out.println("Apply");
		    ApplyCommand cmd = new ApplyCommand();
		    cmd.process(ctx);
		}
	;

/* ----------------------- Add action parser ---------------------- */
add[CommandContext ctx]
	:	TGT_ROUTE	{
		    RouteAddCommand cmd = new RouteAddCommand();
		} addroute[ctx, cmd]
	|	TGT_ALIAS 	{
		    AliasAddCommand cmd = new AliasAddCommand();
		} addalias[ctx, cmd]
	|	TGT_SUBJECT	{
		    SubjectAddCommand cmd = new SubjectAddCommand();
		} addsubject[ctx, cmd]
	|	TGT_PROFILE	{
		    ProfileAddCommand cmd = new ProfileAddCommand();
		} addprofile[ctx, cmd]
	;
/* ----------------------- Del action parser ---------------------- */
del[CommandContext ctx]
	:	TGT_ROUTE 	{
		    RouteDeleteCommand cmd = new RouteDeleteCommand();
		} delroute[ctx, cmd]
	|	TGT_ALIAS 	{
		    AliasDeleteCommand cmd = new AliasDeleteCommand();
		} delalias[ctx, cmd]
	|	TGT_SUBJECT	{
		    SubjectDeleteCommand cmd = new SubjectDeleteCommand();
		} delsubject[ctx, cmd]
	;
/* ----------------------- Alt action parser ---------------------- */
alt[CommandContext ctx]
	:	TGT_ROUTE   	{
		    RouteAlterCommand cmd = new RouteAlterCommand();
		} altroute[ctx, cmd]
	|	TGT_ALIAS   	{
		    AliasAlterCommand cmd = new AliasAlterCommand();
	 	} altalias[ctx, cmd]
	|	TGT_SUBJECT 	{
		    SubjectAlterCommand cmd = new SubjectAlterCommand();
		} altsubject[ctx, cmd]
	|	TGT_PROFILE 	{
		    ProfileAlterCommand cmd = new ProfileAlterCommand();
		} altprofile[ctx, cmd]
	;
/* ----------------------- Lst action parser ---------------------- */
lst[CommandContext ctx]
	:	TGT_ROUTE 	{
		    RouteListCommand cmd = new RouteListCommand();
		} lstroute[ctx, cmd]
	|	TGT_ALIAS 	{
		    AliasListCommand cmd = new AliasListCommand();
		} lstalias[ctx, cmd]
	|	TGT_SUBJECT	{
		    SubjectListCommand cmd = new SubjectListCommand();
		} lstsubject[ctx, cmd]
	;
/* ----------------------- View action parser --------------------- */
view[CommandContext ctx]
	:	TGT_ROUTE 	{
		    RouteViewCommand cmd = new RouteViewCommand();
		} viewroute[ctx, cmd]
	|	TGT_ALIAS 	{
		    AliasViewCommand cmd = new AliasViewCommand();
		} viewalias[ctx, cmd]
	|	TGT_SUBJECT	{
		    SubjectViewCommand cmd = new SubjectViewCommand();
		} viewsubject[ctx, cmd]
	|	TGT_PROFILE	{
		    ProfileViewCommand cmd = new ProfileViewCommand();
		} viewprofile[ctx, cmd]
	;
	
/* ----------------------- Common routes parsers ----------------------- */
srcdef[RouteGenCommand cmd] // Special command required !!!
	:	(OPT_SUBJ | OPT_MASK) val:ADDRESS
	;
dstdef[RouteGenCommand cmd] // Special command required !!!
	:	(OPT_SUBJ | OPT_MASK) val:ADDRESS sysid:NUMBER
	;

/* ----------------------- Route command parsers ----------------------- */

route_src[RouteGenCommand cmd]
	:	OPT_SRC (srcdef[cmd])+
	;
route_dst[RouteGenCommand cmd]
	:	OPT_DST (dstdef[cmd])+
	;
route_serviceid[RouteGenCommand cmd]
	:	OPT_SVCID num:NUMBER
		{
		    System.out.println("Service id="+num.getText());
		}
	;
route_priority[RouteGenCommand cmd]
	:	OPT_PRI pri:NUMBER 
		{
		    System.out.println("priority="+pri.getText());
		}
	;

addroute[CommandContext ctx, RouteAddCommand cmd]
	:	(qname:STRING | name:ID) 
		{
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("Add route="+out);
		    cmd.setRoute(out);
		}
		addroute_flags[cmd]
		route_serviceid[cmd]
		route_priority[cmd]
		route_src[cmd]
		route_dst[cmd]
		{
		    cmd.process(ctx);
		}
	;
addroute_flags[RouteAddCommand cmd]
	:	( OPT_BILL   { cmd.setBill(true);   }
		| OPT_NOBILL { cmd.setBill(false);  })
		( OPT_ARCH   { cmd.setArc(true);    }
		| OPT_NOARCH { cmd.setArc(false);   })
	        ( OPT_ALLOW  { cmd.setAllow(true);  }
		| OPT_DENY   { cmd.setAllow(false); })
	;

delroute[CommandContext ctx, RouteDeleteCommand cmd]
	:	(qname:STRING | name:ID) 
		{
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("Delete route="+out);
		    cmd.setRoute(out);
		    cmd.process(ctx);
		}
	;

altroute[CommandContext ctx, RouteAlterCommand cmd]
	:	(qname:STRING | name:ID) 
		{
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("Alter route="+out);
		    cmd.setRoute(out);
		}
		altroute_flags[cmd]
		(route_serviceid[cmd])?
		(route_priority[cmd])?
		(ACT_ADD | ACT_DELETE)
		(route_src[cmd] | route_dst[cmd])
		{
		    cmd.process(ctx);
		}
	;
altroute_flags[RouteAlterCommand cmd]
	:	( OPT_BILL   { cmd.setBill(true);   } 
		| OPT_NOBILL { cmd.setBill(false);  })?
		( OPT_ARCH   { cmd.setArc(true);    } 
		| OPT_NOARCH { cmd.setArc(false);   })?
	        ( OPT_ALLOW  { cmd.setAllow(true);  }
		| OPT_DENY   { cmd.setAllow(false); })?
	;

lstroute[CommandContext ctx, RouteListCommand cmd]
	:	(WS)?
		{
		    System.out.println("List route");
		    cmd.process(ctx);
		}
	;

viewroute[CommandContext ctx, RouteViewCommand cmd]
	:	(qname:STRING | name:ID) 
		{
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("View route="+out);
		    cmd.setRoute(out);
		    cmd.process(ctx);
		}
	;

/* ----------------------- Alias command parsers ----------------------- */

addalias[CommandContext ctx, AliasAddCommand cmd]
	:	(alias:ADDRESS) {
		    System.out.println("Add alias="+alias.getText());
		    cmd.setAlias(alias.getText());
		}
		(val:ADDRESS) {
		    cmd.setAddress(val.getText());
		}
		( OPT_HIDE   { cmd.setHide(true);  }
		| OPT_NOHIDE { cmd.setHide(false); })?
		{
		    cmd.process(ctx);
		}
	;
delalias[CommandContext ctx, AliasDeleteCommand cmd]
	:	(alias:ADDRESS) {
		    System.out.println("Delete alias="+alias.getText());
		    cmd.setAlias(alias.getText());
		    cmd.process(ctx);
		}
	;
altalias[CommandContext ctx, AliasAlterCommand cmd]
	:	(alias:ADDRESS) {
		    System.out.println("Alter alias="+alias.getText());
		    cmd.setAlias(alias.getText());
		}
		(val:ADDRESS) {
		    cmd.setAddress(val.getText());
		}
		( OPT_HIDE   { cmd.setHide(true);  }
		| OPT_NOHIDE { cmd.setHide(false); })?
		{
		    cmd.process(ctx);
		}
	;
lstalias[CommandContext ctx, AliasListCommand cmd]
	:	(WS)? {
		    System.out.println("List alias");
		    cmd.process(ctx);
		}
	;
viewalias[CommandContext ctx, AliasViewCommand cmd]
	:	(alias:ADDRESS) {
		    System.out.println("View alias="+alias.getText());
		    cmd.setAlias(alias.getText());
		    cmd.process(ctx);
		}
	;

/* ----------------------- Subject command parsers --------------------- */

addsubj_mask[SubjectGenCommand cmd]
	:	(mask:ADDRESS)
		{
		    //cmd.addMask(mask.getText());
		}
	;
addsubj_masks[SubjectGenCommand cmd]
	:	(addsubj_mask[cmd] (COMMA addsubj_mask[cmd])*)
	;

addsubject[CommandContext ctx, SubjectAddCommand cmd]
	:	(qname:STRING | name:ID) 
		{
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("Add subject="+out);
		    cmd.setSubject(out);
		}
		(smeId:ID)
		{
		    cmd.setDefaultSmeId(smeId.getText());
		}
		addsubj_masks[cmd]
		{
		    cmd.process(ctx);
		}
	;
altsubject[CommandContext ctx, SubjectAlterCommand cmd]
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("Alter subject="+out);
		    cmd.setSubject(out);
		}
		((ACT_ADD {
		    //cmd.setActionAdd();
		} | ACT_DELETE {
		    //cmd.setActionDelete();
		}) addsubj_masks[cmd]) | 
		(OPT_DEFSME smeId:ID) {
		    cmd.setDefaultSmeId(smeId.getText());
		}
		{
		    cmd.process(ctx);
		}
	;
delsubject[CommandContext ctx, SubjectDeleteCommand cmd]
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("Delete subject="+out);
		    cmd.setSubject(out);
		    cmd.process(ctx);
		}
	;
lstsubject[CommandContext ctx, SubjectListCommand cmd]
	:	(WS)? {
		    System.out.println("List subject");
		    cmd.process(ctx);
		}
	;
viewsubject[CommandContext ctx, SubjectViewCommand cmd]
	:	(qname:STRING | name:ID) {
		    String out = (qname == null) ? name.getText():qname.getText();
		    System.out.println("View subject="+out);
		    cmd.setSubject(out);
		    cmd.process(ctx);
		}
	;

/* ----------------------- Profile command parsers --------------------- */

addprofile[CommandContext ctx, ProfileAddCommand cmd]
	:	(mask:ADDRESS) {
		    System.out.println("Add profile, mask="+mask.getText());
		    cmd.setMask(mask.getText());
		}
		(OPT_REPORT (VAL_FULL { cmd.setFullReport(); }
			   | VAL_NONE { cmd.setNoneReport(); } ))
		(OPT_ENCODE (VAL_GSM7 { cmd.setGsm7Encoding(); }
			   | VAL_UCS2 { cmd.setUcs2Encoding(); } ))?
		{
		    cmd.process(ctx);
		}
	;
altprofile[CommandContext ctx, ProfileAlterCommand cmd]
	:	(addr:ADDRESS) {
		    System.out.println("Alter profile, addr="+addr.getText());
		    cmd.setAddress(addr.getText());
		}
		(OPT_REPORT (VAL_FULL { cmd.setFullReport(); }
			   | VAL_NONE { cmd.setNoneReport(); } ))
		(OPT_ENCODE (VAL_GSM7 { cmd.setGsm7Encoding(); }
			   | VAL_UCS2 { cmd.setUcs2Encoding(); } ))?
		{
		    cmd.process(ctx);
		}
	;
delprofile[CommandContext ctx, ProfileDeleteCommand cmd]
	:	(mask:ADDRESS) {
		    System.out.println("Delete profile, mask="+mask.getText());
		    cmd.setMask(mask.getText());
		    cmd.process(ctx);
		}
	;
viewprofile[CommandContext ctx, ProfileViewCommand cmd]
	:	(addr:ADDRESS) {
		    System.out.println("View profile, addr="+addr.getText());
		    cmd.setAddress(addr.getText());
		    cmd.process(ctx);
		}
	;
