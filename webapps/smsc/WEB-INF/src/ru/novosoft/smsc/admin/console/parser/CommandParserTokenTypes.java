// $ANTLR 2.7.1: "parser.g" -> "CommandParser.java"$

package ru.novosoft.smsc.admin.console.parser;

/*
 * Parser code generated by ANTLR
 */

import ru.novosoft.smsc.admin.console.Command;
import ru.novosoft.smsc.admin.console.CommandContext;

import ru.novosoft.smsc.admin.console.commands.*;
import ru.novosoft.smsc.admin.console.commands.acl.*;
import ru.novosoft.smsc.admin.console.commands.alias.*;
import ru.novosoft.smsc.admin.console.commands.dl.*;
import ru.novosoft.smsc.admin.console.commands.profile.*;
import ru.novosoft.smsc.admin.console.commands.route.*;
import ru.novosoft.smsc.admin.console.commands.sme.*;
import ru.novosoft.smsc.admin.console.commands.misc.*;


public interface CommandParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int ACT_ADD = 4;
	int ACT_ALTER = 5;
	int ACT_DELETE = 6;
	int ACT_LIST = 7;
	int ACT_VIEW = 8;
	int ACT_APPLY = 9;
	int ACT_SHOW = 10;
	int ACT_GRANT = 11;
	int ACT_REVOKE = 12;
	int ACT_CHECK = 13;
	int ACT_EXPORT = 14;
	int ACT_CONNECT = 15;
	int ACT_DISCONNECT = 16;
	int ADD_ACCESS = 17;
	int ADD_FOR = 18;
	int ADD_TO = 19;
	int TGT_ALIAS = 20;
	int TGT_ROUTE = 21;
	int TGT_PROFILE = 22;
	int TGT_SUBJECT = 23;
	int TGT_PRINCIPAL = 24;
	int TGT_DL = 25;
	int TGT_DLSUB = 26;
	int TGT_DLMEM = 27;
	int TGT_ACL = 28;
	int TGT_SME = 29;
	int TGT_PROVIDER = 30;
	int TGT_CATEGORY = 31;
	int TGT_STATS = 32;
	int TGT_STATS_E = 33;
	int TGT_SMS = 34;
	int TGT_SMS_E = 35;
	int OPT_NAME = 36;
	int OPT_HIDE = 37;
	int OPT_NOHIDE = 38;
	int OPT_SUBSTIT = 39;
	int OPT_BILL = 40;
	int OPT_NOBILL = 41;
	int OPT_ARCH = 42;
	int OPT_NOARCH = 43;
	int OPT_ALLOW = 44;
	int OPT_DENY = 45;
	int OPT_RCPT = 46;
	int OPT_NORCPT = 47;
	int OPT_SRC = 48;
	int OPT_DST = 49;
	int OPT_MASK = 50;
	int OPT_SUBJ = 51;
	int OPT_SVCID = 52;
	int OPT_PRI = 53;
	int OPT_DEFSME = 54;
	int OPT_REPORT = 55;
	int OPT_ENCODE = 56;
	int OPT_NLIST = 57;
	int OPT_NELEM = 58;
	int OPT_OWNER = 59;
	int OPT_LOCALE = 60;
	int OPT_ACTIVE = 61;
	int OPT_INACTIVE = 62;
	int OPT_ABSENT = 63;
	int OPT_BARRED = 64;
	int OPT_BLOCKED = 65;
	int OPT_CAPACITY = 66;
	int OPT_UNCONDIT = 67;
	int OPT_MODIF = 68;
	int OPT_NOTMODIF = 69;
	int OPT_DIVERT = 70;
	int OPT_DM = 71;
	int OPT_FWD = 72;
	int OPT_SRCSME = 73;
	int OPT_SET = 74;
	int OPT_CLEAR = 75;
	int OPT_USSD7BIT = 76;
	int OPT_UDHCONCAT = 77;
	int OPT_TRANSLIT = 78;
	int OPT_ON = 79;
	int OPT_OFF = 80;
	int OPT_NOTES = 81;
	int OPT_RP = 82;
	int OPT_FD = 83;
	int OPT_CACHE = 84;
	int OPT_MODE = 85;
	int OPT_TYPE = 86;
	int OPT_SME_N = 87;
	int OPT_A_RANGE = 88;
	int OPT_TON = 89;
	int OPT_NPI = 90;
	int OPT_INT_V = 91;
	int OPT_SYS_TYPE = 92;
	int OPT_PASSWORD = 93;
	int OPT_TIMEOUT = 94;
	int OPT_R_SCHEME = 95;
	int OPT_P_LIMIT = 96;
	int OPT_S_LIMIT = 97;
	int OPT_WANT_ALIAS = 98;
	int OPT_FORCE_DC = 99;
	int OPT_DISABLED = 100;
	int VAL_FORCE = 101;
	int VAL_SUPPRESS = 102;
	int VAL_PASS = 103;
	int VAL_FULL = 104;
	int VAL_NONE = 105;
	int VAL_DEF = 106;
	int VAL_UCS2 = 107;
	int VAL_LATIN1 = 108;
	int VAL_UCS2LATIN1 = 109;
	int VAL_STORE = 110;
	int VAL_FORWARD = 111;
	int VAL_DATAGRAM = 112;
	int VAL_TX = 113;
	int VAL_RX = 114;
	int VAL_TRX = 115;
	int VAL_SMPP = 116;
	int VAL_SS7 = 117;
	int WS = 118;
	int STR = 119;
	int QSTR = 120;
	int STR_WS = 121;
	int STR_CHR = 122;
	int COMMA = 123;
	int ESC = 124;
	int DIGIT = 125;
}
