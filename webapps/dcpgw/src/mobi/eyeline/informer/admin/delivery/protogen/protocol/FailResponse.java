package mobi.eyeline.informer.admin.delivery.protogen.protocol;

import mobi.eyeline.protogen.framework.*;
import java.io.IOException;



/**
 * This class was generated by protogen, do not edit it
 */
public class FailResponse implements PDU {
  int seqNum;
  Connection connection;
 
  int status;
  boolean statusFlag=false;
  String statusMessage;
  boolean statusMessageFlag=false;

  public FailResponse() {
  }
 

  public FailResponse(int seqNum, int status , String statusMessage) {
 
    this.seqNum = seqNum;
    this.status = status;
    this.statusFlag = true;
    this.statusMessage = statusMessage;
    this.statusMessageFlag = true;
  }
 
  public int getTag() {
    return 2;
  }

  public void clear() {
    statusFlag=false;
    statusMessageFlag=false;
  }
 
  public void debug(StringBuilder sb) {
    sb.append("seqNum=").append(seqNum).append(';');

    if(statusFlag) { sb.append("status=") .append(status).append(';'); }

    if(statusMessageFlag) { sb.append("statusMessage=") .append(statusMessage); }
  }
 
  public String toString() {
    StringBuilder sb=new StringBuilder(128);
    sb.append("FailResponse:");
    debug(sb);
    return sb.toString();
  }

  public int getSeqNum() {
    return seqNum;
  }

  public void setSeqNum(int seqNum) {
    this.seqNum = seqNum;
  }
 
  public int assignSeqNum() {
    seqNum = PDU.seqGenerator.incrementAndGet();
    return seqNum;
  }
 
  public Connection getConnection() {
    return connection;
  }
 
  public void setConnection( Connection con ) {
    connection = con;
  }

  public int getStatus() throws AccessToUndefinedFieldException {
    if(!statusFlag) throw new AccessToUndefinedFieldException("status");
    return status;
  }

  public void setStatus(int status) {
    this.status = status;
    this.statusFlag = true;
  }
 
  public boolean hasStatus() {
    return statusFlag;
  }
  public String getStatusMessage() throws AccessToUndefinedFieldException {
    if(!statusMessageFlag) throw new AccessToUndefinedFieldException("statusMessage");
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    this.statusMessageFlag = true;
  }
 
  public boolean hasStatusMessage() {
    return statusMessageFlag;
  }

  public void encode(BufferWriter writer) throws IOException {
    if(statusFlag) {
      writer.writeTag(1); // tag id
      writer.writeIntLV(status);
    }  else throw new MissingMandatoryFieldException("status");
    if(statusMessageFlag) {
      writer.writeTag(2); // tag id
      writer.writeStringLV(statusMessage);
    }  else throw new MissingMandatoryFieldException("statusMessage");
    writer.writeTag(0xFF); // end message tag
  }

  public void decode(BufferReader reader) throws IOException {
    while( true ) {
      int tag = reader.readTag();
      if( tag == 0xFF ) break;
      switch( tag ) {
        case 1: {
          status = reader.readIntLV();
          statusFlag=true;
        } break;
        case 2: {
          statusMessage = reader.readStringLV();
          statusMessageFlag=true;
        } break;
        default:
          throw new IOException( "unknown tagId: "+tag +" seqnum: "+seqNum +" msg: "+FailResponse.class.getName());      }
    }
  }
}
