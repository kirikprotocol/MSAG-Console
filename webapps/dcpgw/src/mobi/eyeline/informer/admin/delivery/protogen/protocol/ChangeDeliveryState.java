package mobi.eyeline.informer.admin.delivery.protogen.protocol;

import mobi.eyeline.protogen.framework.*;
import java.io.IOException;



/**
 * This class was generated by protogen, do not edit it
 */
public class ChangeDeliveryState implements PDU {
  int seqNum;
  Connection connection;
 
  int deliveryId;
  boolean deliveryIdFlag=false;
  DeliveryState state;
  boolean stateFlag=false;

  public ChangeDeliveryState() {
  }
 

  public ChangeDeliveryState(int seqNum, int deliveryId , DeliveryState state) {
 
    this.seqNum = seqNum;
    this.deliveryId = deliveryId;
    this.deliveryIdFlag = true;
    this.state = state;
    this.stateFlag = true;
  }
 
  public int getTag() {
    return 34;
  }

  public void clear() {
    deliveryIdFlag=false;
    stateFlag=false;
  }
 
  public void debug(StringBuilder sb) {
    sb.append("seqNum=").append(seqNum).append(';');

    if(deliveryIdFlag) { sb.append("deliveryId=") .append(deliveryId).append(';'); }

    if(stateFlag) { sb.append("state=") .append('('); state.debug(sb); sb.append(')'); }
  }
 
  public String toString() {
    StringBuilder sb=new StringBuilder(128);
    sb.append("ChangeDeliveryState:");
    debug(sb);
    return sb.toString();
  }

  public int getSeqNum() {
    return seqNum;
  }

  public void setSeqNum(int seqNum) {
    this.seqNum = seqNum;
  }
 
  public int assignSeqNum() {
    seqNum = PDU.seqGenerator.incrementAndGet();
    return seqNum;
  }
 
  public Connection getConnection() {
    return connection;
  }
 
  public void setConnection( Connection con ) {
    connection = con;
  }

  public int getDeliveryId() throws AccessToUndefinedFieldException {
    if(!deliveryIdFlag) throw new AccessToUndefinedFieldException("deliveryId");
    return deliveryId;
  }

  public void setDeliveryId(int deliveryId) {
    this.deliveryId = deliveryId;
    this.deliveryIdFlag = true;
  }
 
  public boolean hasDeliveryId() {
    return deliveryIdFlag;
  }
  public DeliveryState getState() throws AccessToUndefinedFieldException {
    if(!stateFlag) throw new AccessToUndefinedFieldException("state");
    return state;
  }

  public void setState(DeliveryState state) {
    this.state = state;
    this.stateFlag = true;
  }
 
  public boolean hasState() {
    return stateFlag;
  }

  public void encode(BufferWriter writer) throws IOException {
    if(deliveryIdFlag) {
      writer.writeTag(1); // tag id
      writer.writeIntLV(deliveryId);
    }  else throw new MissingMandatoryFieldException("deliveryId");
    if(stateFlag) {
      writer.writeTag(2); // tag id
      {
        int pos = writer.size();
        writer.writeLength(0);
        int off = writer.size();
        state.encode(writer);
        writer.replaceLength((writer.size()-off), pos);
      }
    }  else throw new MissingMandatoryFieldException("state");
    writer.writeTag(0xFF); // end message tag
  }

  public void decode(BufferReader reader) throws IOException {
    while( true ) {
      int tag = reader.readTag();
      if( tag == 0xFF ) break;
      switch( tag ) {
        case 1: {
          deliveryId = reader.readIntLV();
          deliveryIdFlag=true;
        } break;
        case 2: {
          state = new DeliveryState();
          int sz=reader.readLength();
          state.decode(reader);
          stateFlag=true;
        } break;
        default:
          throw new IOException( "unknown tagId: "+tag +" seqnum: "+seqNum +" msg: "+ChangeDeliveryState.class.getName());      }
    }
  }
}
