package mobi.eyeline.informer.admin.delivery.protogen.protocol;

import mobi.eyeline.protogen.framework.*;
import java.io.IOException;



/**
 * This class was generated by protogen, do not edit it
 */
public class GetDeliveryState implements PDU {
  int seqNum;
  Connection connection;
 
  int deliveryId;
  boolean deliveryIdFlag=false;

  public GetDeliveryState() {
  }
 

  public GetDeliveryState(int seqNum, int deliveryId) {
 
    this.seqNum = seqNum;
    this.deliveryId = deliveryId;
    this.deliveryIdFlag = true;
  }
 
  public int getTag() {
    return 41;
  }

  public void clear() {
    deliveryIdFlag=false;
  }
 
  public void debug(StringBuilder sb) {
    sb.append("seqNum=").append(seqNum).append(';');

    if(deliveryIdFlag) { sb.append("deliveryId=") .append(deliveryId); }
  }
 
  public String toString() {
    StringBuilder sb=new StringBuilder(128);
    sb.append("GetDeliveryState:");
    debug(sb);
    return sb.toString();
  }

  public int getSeqNum() {
    return seqNum;
  }

  public void setSeqNum(int seqNum) {
    this.seqNum = seqNum;
  }
 
  public int assignSeqNum() {
    seqNum = PDU.seqGenerator.incrementAndGet();
    return seqNum;
  }
 
  public Connection getConnection() {
    return connection;
  }
 
  public void setConnection( Connection con ) {
    connection = con;
  }

  public int getDeliveryId() throws AccessToUndefinedFieldException {
    if(!deliveryIdFlag) throw new AccessToUndefinedFieldException("deliveryId");
    return deliveryId;
  }

  public void setDeliveryId(int deliveryId) {
    this.deliveryId = deliveryId;
    this.deliveryIdFlag = true;
  }
 
  public boolean hasDeliveryId() {
    return deliveryIdFlag;
  }

  public void encode(BufferWriter writer) throws IOException {
    if(deliveryIdFlag) {
      writer.writeTag(1); // tag id
      writer.writeIntLV(deliveryId);
    }  else throw new MissingMandatoryFieldException("deliveryId");
    writer.writeTag(0xFF); // end message tag
  }

  public void decode(BufferReader reader) throws IOException {
    while( true ) {
      int tag = reader.readTag();
      if( tag == 0xFF ) break;
      switch( tag ) {
        case 1: {
          deliveryId = reader.readIntLV();
          deliveryIdFlag=true;
        } break;
        default:
          throw new IOException( "unknown tagId: "+tag +" seqnum: "+seqNum +" msg: "+GetDeliveryState.class.getName());      }
    }
  }
}
