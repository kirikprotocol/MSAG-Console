<project name="SMS Center" default="help">
  <property file="build.properties"/>
  <condition property="INIT_FAILED" value="yes" >
    <not>
      <and>
        <isset property="BUILD_DIR"/>
        <isset property="SMSC_DIR"/>
        <isset property="TEMPLATE_PROPS"/>
        <isset property="CATALINA_HOME"/>
        <isset property="CATALINA_BASE"/>
        <isset property="MAKE_ARGS"/>
      </and>
    </not>
  </condition>
  <fail if="INIT_FAILED" message="Please configure build.properties file"/>
  <available file="${TEMPLATE_PROPS}" property="TEMPLATE_PROPS_FOUND" value="yes"/>
  <fail unless="TEMPLATE_PROPS_FOUND" message="Template properties file not found"/>

  <property environment="env"/>
  <property name="DISTR_DIR" value="${BUILD_DIR}/distr"/>
  <property name="SRC_DIR" value="${SMSC_DIR}/src"/>
  <property name="BUILD_BIN" value="${BUILD_DIR}/bin"/>
  <property name="TEMPL_DIR" value="${SMSC_DIR}/config/templates"/>
  <property name="WEBSRC_DIR" value="${SMSC_DIR}/webapps/smsc"/>
  <property name="WEBINF_DIR" value="${DISTR_DIR}/webapps/smsc/WEB-INF"/>
  <property name="SERVICE2HOME_PATH" value="../.."/>
  <property name="DAEMON2HOME_PATH" value=".."/>

  <target name="help">
    <echo>
SMS Center build script
Targets:
      rmbuild
      distr
      update
    </echo>
  </target>

  <target name="makesmsc">
    <ant antfile="${SRC_DIR}/build.xml" dir="${SRC_DIR}" target="system"/>
    <ant antfile="${SRC_DIR}/build.xml" dir="${SRC_DIR}" target="admin"/>
  </target>

  <target name="makeweb">
    <untar compression="gzip" src="${SMSC_DIR}/config/tomcat/tomcat4.tar.gz" dest="${DISTR_DIR}/tomcat"/>
    <ant antfile="${WEBSRC_DIR}/build.xml" dir="${WEBSRC_DIR}" target="build"/>
    <copy todir="${DISTR_DIR}/webapps">
      <fileset dir="${SMSC_DIR}/webapps" includes="images/**/*, styles/**/*, scripts/**/*"/>
    </copy>
  </target>

  <target name="rmdistr">
    <delete dir="${DISTR_DIR}"/>
  </target>

  <target name="rmbuild">
    <delete dir="${BUILD_DIR}"/>
  </target>

  <target name="create_distr_tree_update" depends="rmdistr" >
    <mkdir dir="${DISTR_DIR}"/>
    <mkdir dir="${DISTR_DIR}/conf"/>
    <mkdir dir="${DISTR_DIR}/conf/sql"/>
    <mkdir dir="${DISTR_DIR}/conf/sql/updates"/>
    <mkdir dir="${DISTR_DIR}/lib"/>
    <mkdir dir="${DISTR_DIR}/services"/>
    <mkdir dir="${DISTR_DIR}/services/SMSC"/>
    <mkdir dir="${DISTR_DIR}/services/SMSC/bin"/>
    <mkdir dir="${DISTR_DIR}/services/ArchiveDaemon"/>
    <mkdir dir="${DISTR_DIR}/services/ArchiveDaemon/bin"/>
    <mkdir dir="${DISTR_DIR}/daemon"/>
    <mkdir dir="${DISTR_DIR}/daemon/bin"/>
    <mkdir dir="${DISTR_DIR}/webapps"/>
    <mkdir dir="${DISTR_DIR}/tomcat"/>
    <mkdir dir="${DISTR_DIR}/tomcat/common/lib"/>
    <mkdir dir="${DISTR_DIR}/tomcat/server/lib"/>
    <mkdir dir="${DISTR_DIR}/tomcat/shared/lib"/>
    <mkdir dir="${DISTR_DIR}/tomcat/shared/classes"/>
  </target>

  <target name="create_distr_tree" depends="create_distr_tree_update" >
    <mkdir dir="${DISTR_DIR}/temp"/>
    <mkdir dir="${DISTR_DIR}/logs"/>
    <mkdir dir="${DISTR_DIR}/work"/>
    <mkdir dir="${DISTR_DIR}/services/SMSC/conf"/>
    <mkdir dir="${DISTR_DIR}/services/ArchiveDaemon/conf"/>
    <mkdir dir="${DISTR_DIR}/daemon/conf"/>

    <symlink resource="${SERVICE2HOME_PATH}/lib" link="${DISTR_DIR}/services/SMSC"/>
    <symlink resource="${SERVICE2HOME_PATH}/logs" link="${DISTR_DIR}/services/SMSC"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/command.dtd" link="${DISTR_DIR}/services/SMSC/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/configuration.dtd" link="${DISTR_DIR}/services/SMSC/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/response.dtd" link="${DISTR_DIR}/services/SMSC/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/AliasRecords.dtd" link="${DISTR_DIR}/services/SMSC/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/SmeRecords.dtd" link="${DISTR_DIR}/services/SMSC/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/locale_resources.dtd" link="${DISTR_DIR}/services/SMSC/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/routes.dtd" link="${DISTR_DIR}/services/SMSC/conf"/>

    <symlink resource="${SERVICE2HOME_PATH}/lib" link="${DISTR_DIR}/services/ArchiveDaemon"/>
    <symlink resource="${SERVICE2HOME_PATH}/logs" link="${DISTR_DIR}/services/ArchiveDaemon"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/command.dtd" link="${DISTR_DIR}/services/ArchiveDaemon/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/configuration.dtd" link="${DISTR_DIR}/services/ArchiveDaemon/conf"/>
    <symlink resource="${SERVICE2HOME_PATH}/../conf/response.dtd" link="${DISTR_DIR}/services/ArchiveDaemon/conf"/>

    <symlink resource="${DAEMON2HOME_PATH}/lib" link="${DISTR_DIR}/daemon"/>
    <symlink resource="${DAEMON2HOME_PATH}/logs" link="${DISTR_DIR}/daemon"/>
    <symlink resource="${DAEMON2HOME_PATH}/../conf/command.dtd" link="${DISTR_DIR}/daemon/conf"/>
    <symlink resource="${DAEMON2HOME_PATH}/../conf/configuration.dtd" link="${DISTR_DIR}/daemon/conf"/>
    <symlink resource="${DAEMON2HOME_PATH}/../conf/response.dtd" link="${DISTR_DIR}/daemon/conf"/>

    <symlink resource="../webapps/smsc/WEB-INF/classes/log4j.properties" link="${DISTR_DIR}/conf"/>
  </target>

  <target name="create_update" depends="create_distr_tree_update, makesmsc, makeweb">
    <copy file="${BUILD_BIN}/liblogger.so" todir="${DISTR_DIR}/lib"/>
    <copy file="${BUILD_BIN}/db/exceptions/libdb_exc.so" todir="${DISTR_DIR}/lib"/>
    <copy file="${BUILD_BIN}/db/oci/libdb_oci.so" todir="${DISTR_DIR}/lib"/>
    <copy file="${BUILD_BIN}/system/smsc" todir="${DISTR_DIR}/services/SMSC/bin"/>
    <chmod file="${DISTR_DIR}/services/SMSC/bin/smsc" perm="755"/>
    <copy file="${BUILD_BIN}/store/ArchiveDaemon" todir="${DISTR_DIR}/services/ArchiveDaemon/bin"/>
    <chmod file="${DISTR_DIR}/services/ArchiveDaemon/bin/ArchiveDaemon" perm="755"/>
    <copy file="${BUILD_BIN}/admin/daemon/smsc_ssdaemon" todir="${DISTR_DIR}/daemon/bin"/>
    <chmod file="${DISTR_DIR}/daemon/bin/smsc_ssdaemon" perm="755"/>
    <chmod perm="755">
      <fileset dir="${DISTR_DIR}/lib" includes="*"/>
    </chmod>
    <copy todir="${DISTR_DIR}/conf" preservelastmodified="yes" flatten="yes" >
      <fileset dir="${SMSC_DIR}/config" includes="command.dtd configuration.dtd response.dtd AliasRecords.dtd SmeRecords.dtd smppgw/command_gw.dtd resourcemanager/locale_resources.dtd routes.dtd"/>
    </copy>
    <!-- database sql scripts -->
    <copy todir="${DISTR_DIR}/conf/sql">
      <fileset dir="${TEMPL_DIR}/sql" includes="DBPrepare.sql DBDistrList.sql update/db_*.sql"/>
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>

  </target>

  <target name="update" depends="create_update">
    <ant antfile="${WEBSRC_DIR}/build.xml" dir="${WEBSRC_DIR}" target="update"/>
  </target>

  <target name="configure" depends="create_distr_tree" >
    <!-- webapps configuration -->
    <copy todir="${DISTR_DIR}/conf" flatten="yes" >
      <fileset dir="${TEMPL_DIR}">
        <include name="tomcat/*"/>
      </fileset>
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy todir="${DISTR_DIR}/webapps/smsc/WEB-INF/classes/" file="${TEMPL_DIR}/log4j.properties" flatten="yes" >
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy todir="${DISTR_DIR}" flatten="yes">
      <fileset dir="${TEMPL_DIR}" includes="start_tomcat.sh stop_tomcat.sh"/>
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy tofile="${DISTR_DIR}/tomcat/tomcat_runner.sh" file="${TEMPL_DIR}/tomcat_runner.sh">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy tofile="${DISTR_DIR}/conf/webconfig.xml" file="${TEMPL_DIR}/smppgw/webapp.xml">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>

    <!-- daemon configuration-->
    <copy tofile="${DISTR_DIR}/daemon/logger.properties" file="${TEMPL_DIR}/logger/daemon.logger">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy tofile="${DISTR_DIR}/daemon/conf/daemon.xml" file="${TEMPL_DIR}/smppgw/daemon.xml">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <symlink resource="../daemon/conf/daemon.xml" link="${DISTR_DIR}/conf/daemon.xml" overwrite="yes"/>
    <copy todir="${DISTR_DIR}" flatten="yes">
      <fileset dir="${TEMPL_DIR}" includes="start_daemon.sh stop_daemon.sh"/>
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy tofile="${DISTR_DIR}/daemon/bin/daemon.sh" file="${TEMPL_DIR}/daemon.sh">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>

    <!-- smsc configuration-->
    <copy tofile="${DISTR_DIR}/services/SMSC/logger.properties" file="${TEMPL_DIR}/logger/smsc.logger">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy tofile="${DISTR_DIR}/services/SMSC/bin/service" file="${TEMPL_DIR}/service/smsc">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <chmod file="${DISTR_DIR}/services/SMSC/bin/service" perm="755"/>
    <copy todir="${DISTR_DIR}/services/SMSC/conf" flatten="yes">
      <fileset dir="${TEMPL_DIR}/smsc" includes="config.xml routes.xml routes_.xml routes__.xml sme.xml aliases.xml"/>
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <symlink resource="../services/SMSC/conf/config.xml" link="${DISTR_DIR}/conf/config.xml" overwrite="yes"/>
    <symlink resource="../services/SMSC/conf/routes.xml" link="${DISTR_DIR}/conf/routes.xml" overwrite="yes"/>
    <symlink resource="../services/SMSC/conf/routes_.xml" link="${DISTR_DIR}/conf/routes_.xml" overwrite="yes"/>
    <symlink resource="../services/SMSC/conf/routes__.xml" link="${DISTR_DIR}/conf/routes__.xml" overwrite="yes"/>
    <symlink resource="../services/SMSC/conf/sme.xml" link="${DISTR_DIR}/conf/sme.xml" overwrite="yes"/>
    <symlink resource="../services/SMSC/conf/aliases.xml" link="${DISTR_DIR}/conf/aliases.xml" overwrite="yes"/>

    <!-- archiver configuration-->
    <copy tofile="${DISTR_DIR}/services/ArchiveDaemon/logger.properties" file="${TEMPL_DIR}/logger/archiver.logger">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <copy tofile="${DISTR_DIR}/services/ArchiveDaemon/bin/service" file="${TEMPL_DIR}/service/archiver">
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <chmod file="${DISTR_DIR}/services/ArchiveDaemon/bin/service" perm="755"/>
    <copy todir="${DISTR_DIR}/services/ArchiveDaemon/conf" flatten="yes">
      <fileset dir="${TEMPL_DIR}/archiver" includes="config.xml"/>
      <filterset filtersfile="${TEMPLATE_PROPS}"/>
    </copy>
    <symlink resource="../services/ArchiveDaemon/conf/config.xml" link="${DISTR_DIR}/conf/archiver.xml" overwrite="yes"/>

    <!-- turn scripts be executable -->
    <chmod perm="755">
      <fileset dir="${DISTR_DIR}" includes="**/*.sh"/> 
    </chmod>
  </target>

  <target name="extra_libs" depends="">
    <copy todir="${DISTR_DIR}/lib" flatten="yes" failonerror="yes">
      <fileset dir="/" includesfile="./extra_libs.list"/>
    </copy>
    <copy todir="${DISTR_DIR}/lib" file="extra_lib_links.list" flatten="yes"/>
    <symlink action="recreate">
      <fileset dir="${DISTR_DIR}/lib" includes="extra_lib_links.list"/>
    </symlink>
    <delete file="${DISTR_DIR}/lib/extra_lib_links.list"/>
    <chmod perm="755">
      <fileset dir="${DISTR_DIR}/lib" includes="*"/>
    </chmod>
  </target>

  <target name="create_distr" depends="create_distr_tree, create_update">
  </target>

  <target name="distr" depends="create_distr, extra_libs, configure">
    <ant antfile="${WEBSRC_DIR}/build.xml" dir="${WEBSRC_DIR}" target="install"/>
  </target>

</project>