
-- Delete events if no messages exists
DELETE FROM MCISME_EVT_SET WHERE MSG_ID NOT IN
    (SELECT ID FROM MCISME_MSG_SET);
-- Delete events in WAIT_RCPT state (present on SMSC)    
DELETE FROM MCISME_EVT_SET WHERE MSG_ID IN
    (SELECT ID FROM MCISME_MSG_SET WHERE STATE=30);
-- Detach events from messages
UPDATE MCISME_EVT_SET SET MSG_ID=NULL;

-- Delete messages in WAIT_RCPT state (present on SMSC)
DELETE FROM MCISME_MSG_SET WHERE STATE=30;

-- Set all messages current
DROP TABLE MCISME_CUR_MSG;
CREATE TABLE MCISME_CUR_MSG AS 
    SELECT ABONENT, MAX(ID) AS ID FROM MCISME_MSG_SET GROUP BY ABONENT;
ALTER TABLE MCISME_CUR_MSG
    ADD CONSTRAINT MCISME_CUR_MSG_ABONENT_PK PRIMARY KEY (ABONENT);

-- Re-create table MCISME_MSG_SET (with distinct abonents & maximum ids)
DROP TABLE MCISME_MSG_SET;
CREATE TABLE MCISME_MSG_SET AS
    SELECT ID, ABONENT from MCISME_CUR_MSG;
ALTER TABLE MCISME_MSG_SET
    ADD CONSTRAINT MCISME_MSG_SET_PK PRIMARY KEY (ID);
ALTER TABLE MCISME_MSG_SET ADD (
    STATE NUMBER(3) NULL, SMSC_ID VARCHAR2(64) NULL
);
-- Set all messages to UNKNOWN state
UPDATE MCISME_MSG_SET SET STATE=0, SMSC_ID=NULL;
-- Add NOT NULL constaraint for STATE
ALTER TABLE MCISME_MSG_SET MODIFY (
    STATE NUMBER(3) NOT NULL
);
-- Create indeceis
CREATE INDEX MCISME_MSG_SET_STATE_IDX   ON MCISME_MSG_SET (STATE);
CREATE INDEX MCISME_MSG_SET_ABONENT_IDX ON MCISME_MSG_SET (ABONENT);
CREATE INDEX MCISME_MSG_SET_SMSC_ID_IDX ON MCISME_MSG_SET (SMSC_ID);

COMMIT;
QUIT;