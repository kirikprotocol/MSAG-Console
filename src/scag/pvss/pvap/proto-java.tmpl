package protogen;

import protogen.framework.BufferReader;
import protogen.framework.InvalidMessageTypeException;
import protogen.framework.BufferWriter;

import java.io.IOException;


/**
 * This protocol has header: len (4 oct), tag (4 oct), seq (4 oct), message body
 *
 *
 */
public class $var protocol.name$ {

  public static interface Handler {
$foreach message$
    public void handle( $var message.name$ object );
$-foreach$
  }


  Handler handler;
  public $var protocol.name$(Handler handler) {
    this.handler = handler;
  }

  public void decodeMessage( BufferReader reader ) throws IOException {
    int tag = reader.readInt();
    switch( tag ) {
$foreach message$
      case $var message.tag$:
      {
        $var message.name$ object = new $var message.name$();
        object.decode(reader);
        handler.handle(object);
      }break;
$-foreach$
      default: throw new InvalidMessageTypeException();
    }

  }
$foreach message$
  public byte[] encodeMessage( $var message.name$ object) {
    BufferWriter writer = new BufferWriter();
    writer.writeInt($var message.tag$);
    object.encode(writer);
    return writer.getData();
  }
$-foreach$

}
