// NOTE: Do NOT edit this file (it is auto-generated).
// Instead, edit proto-cpp.tmpl and regenerate.

#ifndef __SCAG_PVSS_PVAP_$var protocol.name:uc$_HPP__
#define __SCAG_PVSS_PVAP_$var protocol.name:uc$_HPP__

#include "Serializer.h"
#include "$var handler.include$"
#include "Exceptions.h"
$foreach message$
#include "$var message.name$.hpp"
$-foreach$

$foreach namespace$
namespace $var namespace$ {
$-foreach$

class $var protocol.name:ucf${
public:
  enum{
$foreach message$
    tag_$var message.name:ucf$=$var message.tag$,
$-foreach$
    tag_NO_TAG=0xffff
  };

  void assignHandler($var handler.class$* newHandler)
  {
    handler=newHandler;
  }

  void decodeMessage(Serializer& ss)
  {
    uint32_t seqNum=ss.readInt32();
    uint16_t tag=ss.readInt16();
    switch(tag)
    {
$foreach message$
      case tag_$var message.name:ucf$:
      {
        std::auto_ptr<$var message.name$> msg(new $var message.name$);
        msg->setSeqNum(seqNum);
        msg->deserialize(ss);
        handler->handle(msg);
      }break;
$-foreach$
      default:
        throw UnhandledMessage(tag);
    }
  }
$foreach message$
  void encodeMessage(const $var message.name$& msg,Serializer& ss)
  {
    ss.writeInt32(msg.getSeqNum());
    ss.writeInt16(tag_$var message.name:ucf$);
    msg.serialize(ss);
  }
$-foreach$
protected:
  $var handler.class$* handler;
};

$foreach namespace$
}
$-foreach$

#endif
