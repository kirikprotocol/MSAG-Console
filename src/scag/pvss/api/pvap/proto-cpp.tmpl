// NOTE: Do NOT edit this file (it is auto-generated).
// Instead, edit proto-cpp.tmpl and regenerate.

#ifndef __SCAG_PVSS_PVAP_$var protocol.name:uc$_HPP__
#define __SCAG_PVSS_PVAP_$var protocol.name:uc$_HPP__

#include <memory>
#include "scag/pvss/api/pvap/BufferReader.h"
#include "scag/pvss/api/pvap/BufferWriter.h"
#include "scag/pvss/api/pvap/Exceptions.h"
$foreach message$
#include "$var message.name$.hpp"
$-foreach$

$foreach namespace$
namespace $var namespace$ {
$-foreach$

class $var protocol.name:ucf$
{
public:
    enum {
$foreach message$
        tag_$var message.name:ucf$=$var message.tag$,
$-foreach$
        tag_NO_TAG = 0xffff
    };

    class Handler 
    {
    public:
        virtual bool hasSeqNum( uint32_t seqNum ) const = 0;
$foreach message$
        virtual void handle( $var message.name$& obj ) = 0;
$-foreach$
    };

    $var protocol.name:ucf$() : handler(0) {}

    $var protocol.name:ucf$( Handler* newHandler ) : handler(newHandler) {}

    /*
    void assignHandler( Handler* newHandler)
    {
        handler=newHandler;
    }
     */

    void decodeMessage( BufferReader& ss ) throw (PvapException)
    {
        uint32_t seqNum = -1;
        seqNum = ss.readInt();
        if ( ! handler->hasSeqNum(seqNum) ) throw UnexpectedSeqNumException(seqNum);
        int tag = ss.readTag();
        switch(tag) {
$foreach message$
        case tag_$var message.name:ucf$: {
            // printf( "tag %d (%s)\n", tag, "$var message.name:ucf$" );
            $var message.name$ msg(seqNum);
            // msg->setSeqNum(seqNum);
            msg.deserialize(*this,ss);
            handler->handle(msg);
            break;
        }
$-foreach$
        default:
            throw InvalidMessageTypeException(seqNum,tag);
        }
    }
$foreach message$

    void encodeMessage( const $var message.name$& msg, BufferWriter& ss ) const
        throw (PvapException)
    {
        ss.writeInt(msg.getSeqNum());
        ss.writeTag(tag_$var message.name:ucf$);
        msg.serialize(*this,ss);
    }
$-foreach$

protected:
    Handler* handler; // unowned
};

$foreach namespace$
}
$-foreach$

#endif
