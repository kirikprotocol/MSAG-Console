// NOTE: Do NOT edit this file (it is auto-generated).
// Instead, edit proto-cpp.tmpl and regenerate.

#ifndef SCAG_BILL_EWALLET_STREAM_$var protocol.name:uc$_HPP
#define SCAG_BILL_EWALLET_STREAM_$var protocol.name:uc$_HPP

#include <memory>
#include "scag/bill/ewallet/stream/BufferReader.h"
#include "scag/bill/ewallet/stream/BufferWriter.h"
$foreach message$
#include "$var message.name$.hpp"
$-foreach$

$foreach namespace$
namespace $var namespace$ {
$-foreach$

class $var protocol.name:ucf$
{
public:
    enum {
$foreach message$
        tag_$var message.name:ucf$=$var message.tag$,
$-foreach$
        tag_NO_TAG = 0xffff
    };

    class Handler 
    {
    public:
$foreach message$
        virtual void handle( $var message.name$& obj ) = 0;
$-foreach$
    };

    $var protocol.name:ucf$() : handler(0) {}

    $var protocol.name:ucf$( Handler* newHandler ) : handler(newHandler) {}

    // inline unsigned getOptions() const { return options_; }
    // inline void setOptions( unsigned opt ) { options_ = opt; }

    void decodeMessage( BufferReader& ss ) /* throw (PvapException) */
    {
        uint32_t seqNum = -1;
$if options.hasSeqNum$
        seqNum = ss.readInt();
$-if$
        // if ( ! handler->hasSeqNum(seqNum) ) throw UnexpectedSeqNumException(seqNum);
        int tag = ss.readTag();
        switch(tag) {
$foreach message$
        case tag_$var message.name:ucf$: {
            // printf( "tag %d (%s)\n", tag, "$var message.name:ucf$" );
            $var message.name$ msg;
$if options.hasSeqNum$
            msg.setSeqNum(seqNum);
$-if$
            msg.deserialize(*this,ss);
            handler->handle(msg);
            break;
        }
$-foreach$
        default:
            throw Exception(Status::IO_ERROR,"unknown message type: seq=%u tag=%u",seqNum,tag);
        }
    }
$foreach message$

    void encodeMessage( const $var message.name$& msg, BufferWriter& ss ) const /* throw (PvapException) */
    {
$if options.hasSeqNum$
        ss.writeInt(msg.getSeqNum());
$-if$
        ss.writeTag(tag_$var message.name:ucf$);
        msg.serialize(*this,ss);
    }
$-foreach$

protected:
    Handler* handler; // unowned
    // unsigned options_;
};

$foreach namespace$
}
$-foreach$

#endif
