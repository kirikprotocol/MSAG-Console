   Описание прототипа "честной" рассылки сообщений в InfoSme.
   ---------------------------------------------------------

Сущности, представленные в прототипе:

Processor -- выполняет основной цикл рассылки и вызывает
        методы остальных обьектов.  Также в его обязанности входит
        управление рассылками: активация, деактивация, уничтожение;

Sender -- содержит список всех регионов и определяет
        порядок их выборки для отсылки сообщений;

Region -- соответствует региону в реальном InfoSme.
        Имеет ограничение по скорости рассылки (bandwidth).  В программе
        м/б несколько обьектов такого класса, по одному на регион;

TaskDispatcher -- определяет порядок выборки активных рассылок по каждому региону
        для отсылки сообщений в него;

Task -- рассылка (задача).  Содержит сгенерированные сообщения,
        упорядоченные по времени отсылки.
        Также имеет атрибуты: приоритет и скорость рассылки.
        В программе м/б несколько обьектов такого класса.

ScoredList -- шаблонный вспомогательный класс, определяет действия
        с сортированным списком обьектов, с приоритетом посылки/приема сообщений.
        Для упорядочивания используется атрибут score, который изменяется после
        выполнения действия с соответствующим обьектом.

SpeedControl -- вспомогательный класс для определения времени готовности
        посылки/приема сообщения.


           Основной цикл.
           -------------

Processor содержит содержит список неактивных рассылок, а также ссылки на
экземпляры TaskDispatcher'а и Sender'а.

Processor выполняет основной цикл приложения:
1. Ожидание прихода времени nextTime, вычисленного в предыдущем проходе цикла;
2. Выполнение ожидающих операций с рассылками: активация, деактивация, уничтожение;
3. Получение текущего времени curTime и вызов метода send(curTime) у обьекта Sender.
   Метод возвращает значение nextTime для следующей итерации цикла.
   Переход на начало цикла.


Sender содержит список всех Region'ов, упорядоченных по score.  В методе
send по очереди проверяются все Region'ы conn начиная с обьекта с минимальным score:
1. Проверяется, готов ли очередной Region к приему сообщения, если нет,
   то вычисляется время готовности nextTime этого региона;
2. Если регион conn готов, то вызывается метод processRegion(curTime,conn)
   у обьекта TaskDispatcher.  Величина score для данного региона увеличивается
   на значение 1000/conn.bandwidth;
3. Список регионов пересортировывается;
4. Если ни один регион не был готов, возвращается минимальное время nextTime
   готовности одного из регионов, иначе возвращается 0.


TaskDispatcher содержит несколько списков (активных) рассылок, по одному списку на
зарегистрированный регион.  Все рассылки в списке упорядочены по score.
Но при этом одна и та же рассылка входит во все списки, но с разным score.
Возможны следующие модификации списков:
1. Добавление новой активной рассылки.  Рассылка добавляется в конец каждого из 
списков (с присвоением соответствующего score);
2. Удаление всех неактивных рассылок.  Неактивные рассылки убираются из каждого
   из списков.  Рассылка считается неактивной, если она отключена или в ней не осталось
   новых сообщений;
3. Добавление нового региона.  При этом создается новый список активных рассылок
   для нового региона, с присвоением score=0 для каждой рассылки в этом списке.

В методе processRegion(curTime,conn), вызываемом из Sender'а,
выполняется следующее:

1. Проверяется, готова ли очередная рассылка для посылки сообщения в данный
   регион conn.  Рассылка может быть не готова если все сообщения в будущем,
   либо если в рассылке вообще нет сообщений для данного региона, либо если
   сработало ограничение по скорости рассылки.  В случае неготовности рассылка
   возвращает время nextTime своей готовности;
2. Если рассылка task готова, то из нее выбирается очередное сообщение msg для данного
   региона, и вызывается conn.sendMessage(msg).  Производится инкремент
   score данной рассылки на величину 1000/task.priority().
3. Список рассылок пересортировывается;
4. Если ни одна рассылка не была готова, то данный регион conn задерживается до
   готовности ближайшей рассылки nextTime.


Для управления готовностью обьектов Region, Task к посылке/приему 
сообщений используется вспомогательный класс SpeedControl.
Обьект данного класса имеет атрибут скорость/пропускная способность,
и три основных метода: isReady(curTime), suspend(nextTime), consumeQuant().
1. isReady(curTime) проверяет, разрешено ли посылать/принимать сообщения.
   Для оптимизации текущее время curTime необходимо передавать в виде аргумента;
2. suspend(nextTime) используется для задержки посылки/приема до времени nextTime;
3. consumeQuant() вызывается после посылки сообщения, для уведомления, что
   сообщения послано и вычисления следующего времени готовности.
