/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 14170 $ of $
 *
 * $Id$
 */
#ifndef MSAGCOUNTERTABLE_H
#define MSAGCOUNTERTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
// #include <net-snmp/agent/table.h>
// #include <net-snmp/library/asn1.h>
// #include <net-snmp/utilities.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(EYELINE-MSAG-MIB)
config_require(EYELINE-MSAG-MIB/msagCounterTable/msagCounterTable_interface)
config_require(EYELINE-MSAG-MIB/msagCounterTable/msagCounterTable_data_access)
config_require(EYELINE-MSAG-MIB/msagCounterTable/msagCounterTable_data_get)
config_require(EYELINE-MSAG-MIB/msagCounterTable/msagCounterTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for msagCounterTable */
#include "msagCounterTable_oids.h"

/* enum definions */
#include "msagCounterTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_msagCounterTable(void);
void shutdown_msagCounterTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table msagCounterTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * EYELINE-MSAG-MIB::msagCounterTable is subid 4 of msag.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.26757.2.4, length: 9
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review msagCounterTable registration context.
     */
typedef netsnmp_data_list msagCounterTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review msagCounterTable data context structure.
 * This structure is used to represent the data for msagCounterTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * msagCounterTable.
 */
typedef struct msagCounterTable_data_s {
    
        /*
         * msagCounterName(2)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
   char   msagCounterName[48];
size_t      msagCounterName_len; /* # of char elements, not bytes */
    
        /*
         * msagCounterValue(3)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   msagCounterValue;
    
} msagCounterTable_data;


/*
 * TODO:120:r: |-> Review msagCounterTable mib index.
 * This structure is used to represent the index for msagCounterTable.
 */
typedef struct msagCounterTable_mib_index_s {

        /*
         * msagCounterIndex(1)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/R/d/h
         */
   long   msagCounterIndex;


} msagCounterTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review msagCounterTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
*/
#define MAX_msagCounterTable_IDX_LEN     1


/* *********************************************************************
 * TODO:130:o: |-> Review msagCounterTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * msagCounterTable_rowreq_ctx pointer.
 */
typedef struct msagCounterTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_msagCounterTable_IDX_LEN];
    
    msagCounterTable_mib_index        tbl_idx;
    
    msagCounterTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to msagCounterTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *msagCounterTable_data_list;

} msagCounterTable_rowreq_ctx;

typedef struct msagCounterTable_ref_rowreq_ctx_s {
    msagCounterTable_rowreq_ctx *rowreq_ctx;
} msagCounterTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int msagCounterTable_pre_request(msagCounterTable_registration * user_context);
    int msagCounterTable_post_request(msagCounterTable_registration * user_context,
        int rc);

    int msagCounterTable_rowreq_ctx_init(msagCounterTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void msagCounterTable_rowreq_ctx_cleanup(msagCounterTable_rowreq_ctx *rowreq_ctx);


    msagCounterTable_rowreq_ctx *
                  msagCounterTable_row_find_by_mib_index(msagCounterTable_mib_index *mib_idx);

extern oid* msagCounterTable_oid;
extern int msagCounterTable_oid_size;

#include "msagCounterTable_interface.h"
#include "msagCounterTable_data_access.h"
#include "msagCounterTable_data_get.h"
#include "msagCounterTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* MSAGCOUNTERTABLE_H */
/** @} */
