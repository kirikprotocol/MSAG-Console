# MESSAGE LISTENER CONFIG
## List of addresses separated by ",". Messages from this addresses will be skipped
messagelistener.ignored.addresses=
## Boolean parameter (true/false). If true receipts will be skiped
messagelistener.skip.receipts=false
## Boolean parameter (true/false). If true messages with rmpty source address will be skiped
messagelistener.check.emptysourceaddr=true
## Boolean parameter (true/false). If true messages with binary encoding will be skiped
messagelistener.check.binary=true
## Boolean parameter (true/false). If true ESME_ROK response will be sent for each incoming message
messagelistener.send.success.response=true

# MESSAGE SENDER CONFIG
## Positive int parameter. Specified number of message send tries
messagesender.max.retries=1
## Positive int parameter. Specified delay in milliseconds between message send tries
messagesender.retry.period=5000

# CONNECTION CONFIG
connect.retry.timeout=5000
last.activity.timeout=300000
inactivity.timeout=60000

# CONNECTOR CONFIGURATION EXAMPLE (from jsmppapi!)
smpp.connector.first=ru.aurorisoft.smpp.ConnectorImpl
smpp.connector.first.host=phoenix
smpp.connector.first.port=7830
smpp.connector.first.systemId=simple_receiver
smpp.connector.first.password=receiver
smpp.connector.first.systemType=
smpp.connector.first.addressRange=250
smpp.connector.first.masks=+7913???????, ????????????, ???????????, ??????????, ?????????, ????????, ???????, ??????, ?????, ????, ???, ??, ?
smpp.connector.first.defaultSmeAddress=250
smpp.connector.first.alwaysResponseCode=0
# OWN PROPERTIES FOR MESSAGE LISTENER
smpp.connector.first.safeMode=false
smpp.connector.first.skipReceipts=false
smpp.connector.first.ignoredAddresses=
smpp.connector.first.skipEmptySrcAddr=true
smpp.connector.first.skipBinary=true
smpp.connector.first.sarEnabled=false
# temporary error codes
# 0-0x3FF smpp standard codes
# 1024-1134 sibinco smsc codes
# 1135-1151 sibinco smsc MAP provider error codes
# 1152-1279 sibinco smsc MAP error codes
smpp.connector.first.tempErrorCodes=8,20,69,88,100,255,1027,1028,1139,1143,1179,1183,1184,1186
# optional parameters
# use Latin1 as default encoding (default value: false)
# if value is true - 7bit will be recoded into Latin1 before sending
#smpp.connector.first.defaultIsLatin1=false
# is Latin1 supported by this connection or not (default value: false)
# if value is false - Latin1 will be recoded into 7bit before sending
#smpp.connector.first.latin1Supported=true
# error code for messages rejected by mask:
# 10 - ESME_RINVSRCADR
# 101 - ESME_RX_P_APPN
# 102 - ESME_RX_R_APPN (by default)
#smpp.connector.first.messageRejectedByMaskErrorCode=102
# cut ton, npi & transactionId from destination address of request (default value: false)
#smpp.connector.first.cutTonNpiTrID=true
# force using of message_payload instead of short_message on connector in whole (default value: false)
#smpp.connector.first.useMessagePayloadInSubmitSM=false
# suppress defaultIsLatin1 and latin1Supported parameters (default value: false)
# message will be send as is (without recoding)
#smpp.connector.first.transitMode=false
# For BercutConnectorImpl only
# Custom USSD shortcuts regexp
#smpp.connector.first.shortcut.regexp=\\*\\d+
# Charge mapping file
#smpp.connector.first.charge.mapping=charge.mapping

