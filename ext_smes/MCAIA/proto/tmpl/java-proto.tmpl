package $var proto.package$;

import mobi.eyeline.protocol.framework.*;
import java.io.IOException;
import mobi.eyeline.cimdapi.utils.*;
import mobi.eyeline.cimdapi.CIMDPDU;
import mobi.eyeline.utils.ByteBuffer;

/**
 * This class generated by protogen
 * This protocol has format: <STX>tag:seq<TAB>...<ETX>
 */
public class $var protocol.name$ implements ProtocolSerializer<CIMDPDU>{
  ByteBuffer buffer;
  public $var protocol.name$() {
    buffer = new ByteBuffer(4096);
  }

  public ProtocolSerializer createInstance() {
    return new $var protocol.name$();
  }
  public ByteBuffer read(java.nio.ByteBuffer byteBuffer) throws IOException {
    while( byteBuffer.remaining() > 0 ) {
      byte b = byteBuffer.get();
      buffer.appendByte(b);
      if( b == Proto.ETX ) {
        return buffer;
      }
    }
    return null;
  }

  public CIMDPDU decode( ByteBuffer buffer ) throws IOException {
    int stx = buffer.remove();
    if( stx != Proto.STX ) throw new IOException("PDU start seq is corrupted");
    int tag = Proto.removeIntParam(buffer);
    int seq = Proto.removeIntParam(buffer);
    $var protocol.name$Tag t = $var protocol.name$Tag.valueOf(tag);
    if( t == null ) throw new InvalidMessageTypeException("Tag "+tag+" was not matched to any pdu type", new Nack());
    CIMDPDU pdu = t.createPdu();
    pdu.setSequenceNumber(seq);
    pdu.decode(buffer);
    return pdu;
  }

  public ByteBuffer encode( CIMDPDU pdu ) throws IOException {
    ByteBuffer writer = new ByteBuffer( 4096 );
    writer.append(Proto.STX);
    Proto.appendParam(writer, pdu.getTag(), 2);
    writer.append(Proto.DELIMITER);
    Proto.appendParam(writer, pdu.getSequenceNumber(),3);
    writer.append(Proto.TAB);
    pdu.encode(writer);
    writer.append(Proto.ETX);
    return writer;
  }
}
