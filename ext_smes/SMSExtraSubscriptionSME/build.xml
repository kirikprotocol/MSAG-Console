<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="sme" default="distr">

  <!-- ============================================= Initialization ================================================ !-->

  <property name="sme.name" value="SubscriptionSme"/>
  <property name="sme.libs.dir" value="lib"/>
  <property name="sme.sourcepath" value="src"/>

  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <property name="BUILD_BIN" value="BUILD"/>
  <property name="DISTR_DIR" value="DISTRIB"/>
  <property name="TEMPLATES_CSV_FILE" value="docs/msisdn2smsc.csv"/>

  <patternset id="compiler.excluded"/>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.html"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
  </patternset>

  <dirname property="sme.basedir" file="${ant.file}"/>

  <path id="sme.classpath">
    <fileset dir="${sme.libs.dir}"/>
  </path>

  <!-- ================================================= Targets =================================================== !-->

  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target !-->
  </target>

  <target name="compile.sme" description="compile sme production classes">
    <mkdir dir="${BUILD_BIN}/classes"/>
    <javac destdir="${BUILD_BIN}/classes" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memoryMaximumSize="${compiler.max.memory}" srcdir="${sme.sourcepath}" fork="true">
      <compilerarg line="${compiler.args}"/>
      <classpath refid="sme.classpath"/>
    </javac>
  </target>
  
  <target name="clean" description="cleanup">
    <delete dir="${BUILD_BIN}/classes"/>
  </target>

  <target name="jar" depends="init, clean, compile.sme" description="jar">
    <mkdir dir="${DISTR_DIR}/services/${sme.name}/bin"/>
    <jar basedir="${BUILD_BIN}/classes" destfile="${DISTR_DIR}/services/${sme.name}/bin/${sme.name}.jar">
      <include name="ru/**"/>
      <include name="com/**"/>
      <exclude name=".dependency-info/**"/>
    </jar>
  </target>

  <target name="build" depends="jar">
    <delete dir="${BUILD_BIN}"/>
  </target>

  <target name="copy_configs" depends="copy_libs">
    <mkdir dir="${DISTR_DIR}/services/${sme.name}/config"/>
    <copy todir="${DISTR_DIR}/services/${sme.name}/config">
      <fileset dir="config"/>
    </copy>
  </target>

  <target name="create_templ" depends="">
    <java classname="ru.sibinco.automation.MasksListConvertor" args="${TEMPLATES_CSV_FILE} ${DISTR_DIR}/services/${sme.name}/config/templates.xml">
      <classpath>
        <fileset file="${DISTR_DIR}/services/${sme.name}/bin/${sme.name}.jar"/>
      </classpath>
    </java>
  </target>

  <target name="copy_libs">
    <mkdir dir="${DISTR_DIR}/services/${sme.name}/lib"/>
    <copy todir="${DISTR_DIR}/services/${sme.name}/lib">
      <fileset dir="${sme.libs.dir}"/>
    </copy>
  </target>

  <target name="create_logs_directory">
    <mkdir dir="${DISTR_DIR}/services/${sme.name}/logs"/>
    <!-- Creating any other logs directories here !-->
  </target>

  <target name="distr" depends="clean, init, build, copy_configs, copy_libs, create_templ, create_logs_directory"/>
  <target name="distr1" depends="clean, init, build, copy_configs, copy_libs, create_logs_directory"/>
  <target name="update" depends="clean, init, build, copy_libs"/>

</project>