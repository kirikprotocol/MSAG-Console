# MESSAGE LISTENER CONFIG

# MESSAGE SENDER CONFIG
## Positive int parameter. Specified number of message send tries
messagesender.max.retries=5
## Positive int parameter. Specified delay in milliseconds between message send tries
messagesender.retry.period=10000

# CONNECTION CONFIG
connect.retry.timeout=120000
last.activity.timeout=300000
inactivity.timeout=60000

# CONNECTOR TO SMSX
smpp.connector.smsx=ru.aurorisoft.smpp.ConnectorImpl
#smpp.connector.smsx.host=phoenix
#smpp.connector.smsx.port=7830
#smpp.connector.smsx.systemId=sponsored
#smpp.connector.smsx.password=sponsore
smpp.connector.smsx.host=smsservices.aurorisoft.com
smpp.connector.smsx.port=8234
smpp.connector.smsx.systemId=m4s666
smpp.connector.smsx.password=m4s666
smpp.connector.smsx.systemType=
smpp.connector.smsx.addressRange=741
smpp.connector.smsx.masks=????????????, ???????????, ??????????, ?????????, ????????, ???????, ??????, ?????, ????, ???, ??, ?
smpp.connector.smsx.defaultSmeAddress=741
smpp.connector.smsx.safeMode=false
smpp.connector.smsx.skipReceipts=false
smpp.connector.smsx.ignoredAddresses=
smpp.connector.smsx.skipEmptySrcAddr=true
smpp.connector.smsx.skipBinary=true
# temporary error codes
# 0-0x3FF smpp standard codes
# 1024-1134 sibinco smsc codes
# 1135-1151 sibinco smsc MAP provider error codes
# 1152-1279 sibinco smsc MAP error codes
smpp.connector.smsx.tempErrorCodes=8,20,69,88,100,255,1027,1028,1139,1143,1179,1183,1184,1186
# optional parameters
# use Latin1 as default encoding (default value: false)
# if value is true - 7bit will be recoded into Latin1 before sending
#smpp.connector.smsx.defaultIsLatin1=false
# is Latin1 supported by this connection or not (default value: false)
# if value is false - Latin1 will be recoded into 7bit before sending
#smpp.connector.smsx.latin1Supported=true
# error code for messages rejected by mask:
# 10 - ESME_RINVSRCADR
# 101 - ESME_RX_P_APPN
# 102 - ESME_RX_R_APPN (by default)
#smpp.connector.smsx.messageRejectedByMaskErrorCode=102
# cut ton, npi & transactionId from destination address of request (default value: false)
#smpp.connector.smsx.cutTonNpiTrID=true
# force using of message_payload instead of short_message on connector in whole (default value: false)
#smpp.connector.smsx.useMessagePayloadInSubmitSM=false
# suppress defaultIsLatin1 and latin1Supported parameters (default value: false)
# message will be send as is (without recoding)
#smpp.connector.smsx.transitMode=false
# For BercutConnectorImpl only
# Custom USSD shortcuts regexp
#smpp.connector.smsx.shortcut.regexp=\\*\\d+
# Charge mapping file
#smpp.connector.smsx.charge.mapping=charge.mapping


# CONNECTOR TO MAR
#smpp.connector.mar=ru.aurorisoft.smpp.ConnectorImpl
#smpp.connector.mar.host=192.168.37.166
#smpp.connector.mar.port=5001
#smpp.connector.mar.systemId=smextra2
#smpp.connector.mar.password=d7dba8be
#smpp.connector.mar.systemType=test
#smpp.connector.mar.addressRange=784
#smpp.connector.mar.masks=+7??????????, .0.0., 89?????????, .0.9.89?????????
#smpp.connector.mar.defaultSmeAddress=784
#smpp.connector.mar.safeMode=true
#smpp.connector.mar.skipReceipts=true
#smpp.connector.mar.ignoredAddresses=
#smpp.connector.mar.skipEmptySrcAddr=true
#smpp.connector.mar.skipBinary=true
# temporary error codes
# 0-0x3FF smpp standard codes
# 1024-1134 sibinco smsc codes
# 1135-1151 sibinco smsc MAP provider error codes
# 1152-1279 sibinco smsc MAP error codes
#smpp.connector.mar.tempErrorCodes=8,20,69,88,100,255,1027,1028,1139,1143,1179,1183,1184,1186
# optional parameters
# use Latin1 as default encoding (default value: false)
# if value is true - 7bit will be recoded into Latin1 before sending
#smpp.connector.mar.defaultIsLatin1=false
# is Latin1 supported by this connection or not (default value: false)
# if value is false - Latin1 will be recoded into 7bit before sending
#smpp.connector.mar.latin1Supported=true
# error code for messages rejected by mask:
# 10 - ESME_RINVSRCADR
# 101 - ESME_RX_P_APPN
# 102 - ESME_RX_R_APPN (by default)
#smpp.connector.mar.messageRejectedByMaskErrorCode=102
# cut ton, npi & transactionId from destination address of request (default value: false)
#smpp.connector.mar.cutTonNpiTrID=false
# force using of message_payload instead of short_message on connector in whole (default value: false)
#smpp.connector.mar.useMessagePayloadInSubmitSM=false
# suppress defaultIsLatin1 and latin1Supported parameters (default value: false)
# message will be send as is (without recoding)
#smpp.connector.mar.transitMode=false
# For BercutConnectorImpl only
# Custom USSD shortcuts regexp
#smpp.connector.mar.shortcut.regexp=\\*\\d+
# Charge mapping file
#smpp.connector.mar.charge.mapping=charge.mapping
