<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE config SYSTEM "file://configuration.dtd">
<!--  "$Id$" -->
<!-- configuration for INMan v0.7.7 or higher -->
<config>
  <param name="version" type="string">0.7.7</param>   <!-- config version -->

  <section name="Services">
    <param name="Host" type="string">uid: icsTCPServer</param> <!--  -->
    <!-- SMS/USSD messages charging -->
    <param name="Billing" type="string">uid: icsSmBilling</param> <!-- dll: libinman_ics_smbill.so -->
    <!-- Abonent contract type and gsmSCF params determination -->
    <param name="AbonentDetector" type="string">uid: icsAbntDetector</param> <!-- dll: libinman_ics_abdtcr.so -->
  </section>

  <section name="Host">
    <param name="host" type="string">@inman.host@</param>  <!-- InMan service host -->
    <param name="port" type="int">@inman.port@</param>        <!-- InMan service port -->
    <param name="maxClients" type="int">3</param>       <!--  max allowed INMan client connections, default: 3 -->
  </section>

  <section name="AbonentDetector"> <!-- Abonent contract type and gsmSCF params determination -->
    <param name="abonentPolicy" type="string">MTC_Nsk_Default</param> <!-- 
      preferred abonent policy (defined in section AbonentPolicies) , if it's missing, 
      the policy is to use will be determined according to sender address and specified
      policies address pool.
     -->
    <param name="maxRequests" type="int">500</param>   <!--  [1 .. 100000] , default 1000 
     maximium number of simultaneous requests per client  connection ,
     0 - means use default value-->
    <param name="abonentTypeTimeout" type="int">8</param> <!-- units: seconds, [1 .. 65535],
    maximum allowed time for determining abonent contract type,   default 8
     -->
    <!-- OPTIONAL PARAMETERS follow:: -->
    <param name="useCache" type="bool">true</param>    <!--
    switches abonents cache usage, default: true  -->
    <param name="cacheExpiration" type="int">20</param>   <!--
     abonent info cache data expiration interval, units: minutes, [1 .. 65535], default 20,
     0 - means the default cache  interval is used -->
  </section>

  <section name="Billing">   <!-- SMS/USSD messages charging -->
   <section name="BillingModes"> <!--
     Sets billing mode depending on message type. The following types are
     recognized:
        SMS  : ordinary SMS message,
        USSD : ordinary USSD message,
        XSMS : SMS Extra message.
     For each message type the following modes may be assigned either for
     MO or MT billing:
        OFF : billing is forbidden (default),
        CDR : perform billing by generating CDR,
        IN  : perform billing by interacting the IN point, in case
              of failure follow the secondary mode.
     -->
    <section name="SMS"> <!-- ordinary SMS message -->
      <param name="MO" type="string"> OFF </param>
      <param name="MT" type="string">IN, CDR</param>
    </section>
    <section name="USSD"> <!-- ordinary USSD message -->
      <param name="MO" type="string">IN, CDR</param>
      <param name="MT" type="string">IN, CDR</param>
    </section>
    <section name="XSMS"> <!-- SMS Extra message -->
      <param name="MO" type="string">IN, OFF</param>
      <param name="MT" type="string">IN, OFF</param>
    </section>
   </section>

    <param name="abonentTypeRequest" type="string">onDemand</param> <!-- [onDemand, always]
    mode of abonent contract type determination (request to AbonentProvider)
    onDemand : determine only if required for billing, default
    always   : always determine
    -->
    <param name="abonentPolicy" type="string">MTC_Nsk_Default</param> <!-- 
      preferred abonent contract determination policy (defined in section AbonentPolicies) ,
      obligatory if there is at least one billing mode set to IN or abonentTypeRequest is set to always
     -->
    <param name="abonentTypeTimeout" type="int">8</param> <!-- units: seconds, [1 .. 65535],
    maximum allowed time for determining abonent contract type,  default 8
     billing continues on its expiration in CDR mode
     -->
    <param name="maxBillings" type="int">200</param>   <!--  [1 .. 100000] , default 1000 
     maximium simultaneous billing requests per INMan client  connect,
     0 - means use default value-->
    <param name="maxTimeout" type="int">30</param>  <!-- units: seconds, [5 .. 65535], default 120 
    maximum allowed value for billing suspending time (SMSC interaction), billing aborts on its expiration
     -->
    <param name="cdrDir" type="string">./cdrs</param>  <!-- directory to store CDRs -->
    <param name="cdrInterval" type="int">120</param>   <!-- CDR storage rolling interval, units: seconds -->
    <param name="cdrMode" type="string">billMode</param>    <!-- 
      options: [none, all, billMode]
      none:   don't write any CDR at all;
      all:    always write CDR for each transaction perfomed;
      billMode: write CDR according to billMode setting (default)
    -->
    <!-- OPTIONAL PARAMETERS follow:: -->
    <param name="useCache" type="bool">true</param>    <!--
    switches abonents cache usage, default: true  -->
    <param name="cacheExpiration" type="int">20</param>   <!--
     abonent info cache data expiration interval, units: minutes, [1 .. 65535], default 20,
     0 - means the default cache  interval is used
    -->
    <param name="smsExtraConfig" type="string">cfg_extra.xml</param>   <!-- config file for extra SMS services -->
    <param name="CAP3Sms" type="string">TCAPUser</param>  <!--
    section name for TCAP user configuration CAP3Sms uses, defualt: TCAPUser
    -->
  </section>

  <section name="SS7_HD"> <!-- SS7 HD stack interaction parameters -->
    <param name="cpMgrHosts" type="string">
      @CPMgr.host@ : @CPMgr.port@ , @CPMgr2.host@ : @CPMgr2.port@
    </param>  <!-- CSV list of Remote CommonParts Managers addresses
    (in form 'host:port') -->
    <param name="cpMgrInstId" type="int">0</param> <!-- optional: Remote
    CommonParts Manager instanceId, [0..255], default: 0 -->
    <param name="mpUserId" type="int">03</param>               <!--
    CP userId of message port owner [1..20] -->
    <param name="maxMsgNum" type="int">800</param> <!-- optional:
    max input SS7 messages buffer size, [1..65535], default: 512 -->

    <param name="dfltLayout" type="string">TCAPApplication1</param>
    <!-- name of 'Layouts' subsection that describes required stack configuration.
    NOTE: may be overriden by commandline arg -->

    <section name="Layouts">

      <section name="TCAPApplication1"> <!-- simple application that
      uses single TCAP BE (1st instance) -->
        <param name="instanceId" type="int">1</param>
        <!-- optional: local application instanceId, [1..255], default: 1 -->
        <param name="ss7Units" type="string">TCAP_BE_1</param>
        <!-- CSV list of names of SS7 Unit(s) configuration sections  -->
      </section>

      <section name="TCAPApplication2"> <!-- simple application that
      uses single TCAP BE (2nd instance) -->
        <param name="instanceId" type="int">2</param>
        <!-- optional: local application instanceId, [1..255], default: 1 -->
        <param name="ss7Units" type="string">TCAP_BE_2</param>
        <!-- CSV list of names of SS7 Unit(s) configuration sections  -->
      </section>

      <section name="TCAPApplicationHD"> <!-- simple application that
      uses HD TCAP BE (distibuted by two instances) -->
        <param name="instanceId" type="int">3</param>
        <!-- optional: local application instanceId, [1..255], default: 1 -->
        <param name="ss7Units" type="string">TCAP_BE_HD2</param>
        <!-- CSV list of names of SS7 Unit(s) configuration sections  -->
      </section>

      <section name="ComplexApplication"> <!-- complex application that
      uses HD TCAP BE (distibuted by two instances) and single SCCP BE -->
        <param name="instanceId" type="int">4</param>
        <!-- optional: local application instanceId, [1..255], default: 1 -->
        <param name="ss7Units" type="string">TCAP_BE_HD2, SCCP_BE_1</param>
        <!-- CSV list of names of SS7 Unit(s) configuration sections  -->
      </section>

    </section> <!-- SS7_HD.Layouts -->

    <section name="SS7Units"> <!-- configuration of known SS7 Units  -->
      <section name="TCAP_BE_1"> <!-- single instance TCAP unit  -->
        <param name="unitId" type="string">TCAP_ID</param>
        <!-- id of interacted communication unit, see portss7.h -->
        <param name="instancesList" type="string">1</param>
        <!-- optional: CSV list of instanceIds of interacted communication
        unit, [1..255], default: "1" --> 
      </section>

      <section name="TCAP_BE_2"> <!-- single instance TCAP unit -->
        <param name="unitId" type="string">TCAP_ID</param>
        <!-- id of interacted communication unit, see portss7.h -->
        <param name="instancesList" type="string">2</param>
        <!-- optional: CSV list of instanceIds of interacted communication
        unit, [1..255], default: "1" -->
      </section>

      <section name="TCAP_BE_HD2"> <!-- HD variant of TCAP unit
      distributed by two instances -->
        <param name="unitId" type="string">TCAP_ID</param>
        <!-- id of interacted communication unit, see portss7.h -->
        <param name="instancesList" type="string">1, 2</param>
        <!-- optional: CSV list of instanceIds of interacted communication
        unit, [1..255], default: "1" -->
      </section>

      <section name="SCCP_BE_1"> <!-- single instance SCCP unit  -->
        <param name="unitId" type="string">SCCP_ID</param>
        <!-- id of interacted communication unit, see portss7.h -->
        <param name="instancesList" type="string">1</param>
        <!-- optional: CSV list of instanceIds of interacted communication
        unit, [1..255], default: "1" -->
      </section>

    </section> <!-- SS7_HD.SS7Units -->

  </section> <!-- SS7_HD -->

  <section name="SS7"> <!-- SS7 stack interaction parameters -->
    <param name="ss7UserId" type="int">03</param>     <!--
    PortSS7 user id [1..20], default: 03  -->
    <!-- OPTIONAL PARAMETERS follow:: -->
    <param name="maxMsgNum" type="int">800</param>     <!--
    max input SS7 messages buffer size,   [1..65535], default: 512,
    NOTE: is overriden by value from cp.cnf  --> 
  </section>

  <section name="TCAPUser"> <!-- SSF specific TCUser configuration -->
    <param name="ownSsn" type="int">146</param>
    <param name="ownAddress" type="string">@inman.ssfAddress@</param>  <!-- ISDN address -->
    <!-- OPTIONAL PARAMETERS follow:: -->
    <param name="maxDialogs" type="int">2000</param>   <!--
    maximum number of simultaneous TC dialogs per SSN, [2..65510], default 800
    -->
    <param name="fakeSsn" type="int">0</param>    <!--
    SSN to substitute in TCAP dialog org addr, 0 - means not used, default: 0
    -->
    <param name="rosTimeout" type="int">20</param>   <!--
    timeout on ROS operations (MAP/CAP), units: seconds, max: 65535, default 20
    -->
  </section>

  <section name="TCAPUserSRI"> <!-- SRI specific TCUser configuration -->
    <param name="ownSsn" type="int">146</param>
    <param name="ownAddress" type="string">@inman.ssfAddress@</param>  <!-- ISDN address -->
    <!-- OPTIONAL PARAMETERS follow:: -->
    <param name="maxDialogs" type="int">500</param>   <!--
    maximum number of simultaneous TC dialogs per SSN, [2..65510], default 800
    -->
    <param name="fakeSsn" type="int">8</param>    <!--
    SSN to substitute in TCAP dialog org addr, 0 - means not used, default: 0
    -->
    <param name="rosTimeout" type="int">6</param>   <!--
    timeout on MAP operations, units: seconds, max: 65535, default 20
    -->
  </section>

  <section name="AbonentsCache">
    <param name="cacheExpiration" type="int">20</param>   <!-- default abonent
    cache data expiration interval, units: minutes, [1 .. 65535], default 20 -->
    <param name="cacheRAM" type="int">40</param>   <!-- abonents cache RAM buffer size, units: Mb -->
    <param name="cacheDir" type="string">./cache</param>  <!-- directory to store abonents cache -->
    <!-- OPTIONAL PARAMETERS follow:: -->
    <param name="cacheRecords" type="int">1</param>  <!-- initial number of cache file records, 
     units: abonents :) , default: 10000 -->
  </section>

  <section name="AbonentPolicies">
 <!--  policy value is a CSV list of  two parts, which are both optional:
          1) name of abonent provider to use (defined in section AbonentProviders) 
          for getting abonent contract type (possibly with gsmSCF parms),
          2) CSV  list of IN-platform (defined in section IN-platforms)
          NOTE 1: * is a special symbol, replacing all defined IN-platforms
          NOTE 2: serviceKey from IN-platform config overrides the one returned by abonent provider
         -->
    <section name="MTC_NskExtra_SRI"> <!-- get contract/gsmSCF from HLR, 
      serviceKey from INMan config -->
      <param name="policy" type="string">HLR_Nsk_SRI, *</param>
      <!-- param name="addrPool" type="string">7913%7[0-9]</param -->  <!-- address pool mask -->
      <!-- param name="active" type="bool">true</param -->    <!-- use or ignore this policy, default: true -->
    </section>

      <section name="MTC_Nsk_Default">
          <param name="policy" type="string">, IN_Nsk_Huawei</param> <!-- get contract from gsmSCF, No provider at all !!!  -->
          <!-- param name="addrPool" type="string">7913%7[0-9]</param -->  <!-- address pool mask -->
          <!-- param name="active" type="bool">true</param -->    <!-- use or ignore this policy, default: true -->
      </section>

    <section name="MTC_Nsk_SRI"> <!-- get contract/gsmSCF from HLR, serviceKey from INMan config -->
        <param name="policy" type="string">HLR_Nsk_SRI, IN_Nsk_Huawei</param>
        <!-- param name="addrPool" type="string">7913%7[0-9]</param -->  <!-- address pool mask -->
        <!-- param name="active" type="bool">true</param -->    <!-- use or ignore this policy, default: true -->
    </section>

    <section name="TST_Nsk_DB"> <!-- get contract from DB, gsmSCF/serviceKey from INMan config -->
        <param name="policy" type="string">DB_Contract, IN_Nsk_Huawei</param>
        <!-- param name="addrPool" type="string">7913%7[0-9]</param -->  <!-- address pool mask -->
        <!-- param name="active" type="bool">true</param -->    <!-- use or ignore this policy, default: true -->
    </section>

    <section name="MTC_Ural_FORIS"> <!-- get contract from DB, gsmSCF/serviceKey from INMan config -->
        <param name="policy" type="string">DB_Contract, IN_Ural_Alcatel</param>
        <!-- param name="addrPool" type="string">7912%7[0-9]</param -->  <!-- address pool mask -->
        <!-- param name="active" type="bool">true</param -->    <!-- use or ignore this policy, default: true -->
    </section>

  </section>

  <section name="IN-platforms"> <!-- known IN-platforms with serviceKeys specified -->
      <!--  IN-platform configuration may have optional fields defined:
            1) param name="RPCList_retry" type="string"  - it's a comma 
            separated list of strings, which specify the RPCause that
            forces IN-platform interaction retrying. Each such string is a
            colon separated pair of RPCause code and number of additional
            interaction attempts, example: 41:1, 42:2

            2) param name="RPCList_reject" type="string"  - it's a comma
            separated list of extra (in addition to 21) RP MO causes returned
            by IN platform, which forbid DP processing because of low balance
            if supported, example(Alcatel): 16

            3) param name="IDPLocationInfo" type="string" - sets the nature of
            address to substitute into LocationInformationMSC of InitialDP
            operation while interacting this IN platform,
            options: MSC (default), SMSC, SSF (INMan own address)

            4) param name="IDPReqMode" type="string"      - sets the sending
            mode (parallel or sequential) of several InitialDP operations per
            same abonent. Some implementations of IN-points unable to process
            several InitialDP requests at same times.
            options: MT (default: parallel), SEQ (sequential)
      -->
      <section name="IN_Nsk_Huawei">
          <param name="scfAddress" type="string">79139860005</param>  <!-- IN (gsmSCF) point address -->
          <section name="ServiceKeys">
            <param name="MO-SM" type="string">11</param>  <!-- uint32_t or algorithm -->
          </section>
          <param name="RPCList_retry" type="string">41, 42:2</param> 
          <param name="RPCList_reject" type="string"></param>     <!-- not supported -->
          <param name="IDPLocationInfo" type="string"></param>  <!-- [MSC (default), SMSC, SSF] -->
          <param name="IDPReqMode" type="string"></param>  <!-- [MT (default), SEQ] -->
      </section>

      <section name="IN_Ural_Alcatel">
        <param name="scfAddress" type="string">79126313005</param>  <!-- IN (gsmSCF) point address -->
        <section name="ServiceKeys">
           <param name="MO-SM" type="string">2</param>   <!-- uint32_t or  algorithm --> 
        </section>

        <param name="RPCList_retry" type="string">41, 42:2</param>
        <param name="RPCList_reject" type="string">16</param> <!-- supported -->
        <param name="IDPLocationInfo" type="string">SSF</param>  <!-- [MSC (default), SMSC, SSF] -->
        <param name="IDPReqMode" type="string"></param>  <!-- [MT (default), SEQ] -->
      </section>

      <section name="IN_Krd_Ericcson_1">
        <param name="scfAddress" type="string">79184790291</param>  <!-- IN (gsmSCF) point address -->
        <param name="aliasFor" type="string">IN_Krd_Ericcson</param>
      </section>

      <section name="IN_Krd_Ericcson_2">
        <param name="scfAddress" type="string">79184790292</param>  <!-- IN (gsmSCF) point address -->
        <param name="aliasFor" type="string">IN_Krd_Ericcson</param>
      </section>

      <section name="IN_Krd_Ericcson">
        <param name="scfAddress" type="string">79184790295</param>  <!-- IN (gsmSCF) point address -->
        <section name="ServiceKeys">
          <param name="MO-SM" type="string">map: MO-BC: mapMOBC-MOSM</param>
        </section>
        <param name="RPCList_retry" type="string"></param>
        <param name="RPCList_reject" type="string"></param>     <!-- not supported -->
        <param name="IDPLocationInfo" type="string"></param>  <!-- [MSC (default), SMSC, SSF] -->

        <section name="mapMOBC-MOSM">
          <param name="80" type="int">1</param>
          <param name="82" type="int">2</param>
          <param name="84" type="int">3</param>
          <param name="86" type="int">4</param>
          <param name="88" type="int">5</param>
        </section>
      </section>

  </section>

  <section name="AbonentProviders"> <!-- abonent contract/gsmSCF params  providers -->
      <section name="HLR_Nsk_SRI">
        <param name="loadup" type="string">libinman_iap_sri.so</param>
        <section name="Config">
          <param name="tcapUser" type="string">TCAPUserSRI</param> <!--
          section name for TCAP user configuration this provider uses
          -->
        </section>
      </section>

      <section name="DB_Contract"> <!-- DB provides abonent contract (prepaid or postpaid) only -->
          <param name="loadup" type="string">libinman_iap_db.so</param>
          <section name="Config">
              <section name="DataSource">
                  <param name="type" type="string">OCI</param> <!-- Oracle DB -->
                  <param name="dbInstance" type="string">@inman.db.instance@</param>
                  <param name="dbUserName" type="string">@inman.db.userid@</param>
                  <param name="dbUserPassword" type="string">@inman.db.PasSword@</param>
                  <param name="connections" type="int">5</param>  <!--  max allowed db connections -->
                  <param name="maxQueries" type="int">15</param>  <!--  max allowed db queries -->
                  <param name="watchdog" type="bool">true</param>  <!--  turn on timeouts handling -->
                  <param name="timeout" type="int">15</param>  <!--  timeout on connection queries, units: secs  [1..65535] -->

               <!--  SQL function returning Abonent type has following prototype:
                      FUNCTION abonentQueryFunc (iqueryFuncArg  IN VARCHAR) RETURN NUMBER
                -->
                  <param name="abonentQueryFunc" type="string">get_prepaid</param>
                  <param name="queryFuncArg" type="string">in_mob_num</param>
              </section>
              <section name="DataSourceDrivers">
                  <section name="OCIDataSourceDriver">
                      <param name="type" type="string">OCI</param>
                      <param name="loadup" type="string">libdb_oci.so</param>
                  </section>
              </section>
          </section>
      </section> <!-- DB_Contract -->

  </section> <!-- AbonentProviders -->
</config>

